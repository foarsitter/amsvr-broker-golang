/*
AMSVR Broker API

# Introductie     Voor u heeft u de online documentatie van de AMSVR Broker API. Omdat het een Nederlands domein      betreft worden er Engelse en Nederlandse terminologie door elkaar heen gebruikt.  Liefhebbers van de Swagger UI kunnen [hier terecht](/swagger-ui). Daarnaast is de API eveneens beschikbaar in de op endpoint niveau zoals bijvoorbeeld [hier](/api/aansluitingen).  ##        

API version: release-0.6.14
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package broker

import (
	"encoding/json"
	"time"
)

// Afspraak struct for Afspraak
type Afspraak struct {
	Id int32 `json:"id"`
	StartTijd time.Time `json:"start_tijd"`
	EindTijd *time.Time `json:"eind_tijd,omitempty"`
	Titel string `json:"titel"`
	Title string `json:"title"`
	Start time.Time `json:"start"`
	End time.Time `json:"end"`
	Url string `json:"url"`
	Aansluiting NullableInt32 `json:"aansluiting,omitempty"`
}

// NewAfspraak instantiates a new Afspraak object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAfspraak(id int32, startTijd time.Time, titel string, title string, start time.Time, end time.Time, url string) *Afspraak {
	this := Afspraak{}
	this.Id = id
	this.StartTijd = startTijd
	this.Titel = titel
	this.Title = title
	this.Start = start
	this.End = end
	this.Url = url
	return &this
}

// NewAfspraakWithDefaults instantiates a new Afspraak object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAfspraakWithDefaults() *Afspraak {
	this := Afspraak{}
	return &this
}

// GetId returns the Id field value
func (o *Afspraak) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Afspraak) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Afspraak) SetId(v int32) {
	o.Id = v
}

// GetStartTijd returns the StartTijd field value
func (o *Afspraak) GetStartTijd() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartTijd
}

// GetStartTijdOk returns a tuple with the StartTijd field value
// and a boolean to check if the value has been set.
func (o *Afspraak) GetStartTijdOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTijd, true
}

// SetStartTijd sets field value
func (o *Afspraak) SetStartTijd(v time.Time) {
	o.StartTijd = v
}

// GetEindTijd returns the EindTijd field value if set, zero value otherwise.
func (o *Afspraak) GetEindTijd() time.Time {
	if o == nil || o.EindTijd == nil {
		var ret time.Time
		return ret
	}
	return *o.EindTijd
}

// GetEindTijdOk returns a tuple with the EindTijd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Afspraak) GetEindTijdOk() (*time.Time, bool) {
	if o == nil || o.EindTijd == nil {
		return nil, false
	}
	return o.EindTijd, true
}

// HasEindTijd returns a boolean if a field has been set.
func (o *Afspraak) HasEindTijd() bool {
	if o != nil && o.EindTijd != nil {
		return true
	}

	return false
}

// SetEindTijd gets a reference to the given time.Time and assigns it to the EindTijd field.
func (o *Afspraak) SetEindTijd(v time.Time) {
	o.EindTijd = &v
}

// GetTitel returns the Titel field value
func (o *Afspraak) GetTitel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Titel
}

// GetTitelOk returns a tuple with the Titel field value
// and a boolean to check if the value has been set.
func (o *Afspraak) GetTitelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Titel, true
}

// SetTitel sets field value
func (o *Afspraak) SetTitel(v string) {
	o.Titel = v
}

// GetTitle returns the Title field value
func (o *Afspraak) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *Afspraak) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *Afspraak) SetTitle(v string) {
	o.Title = v
}

// GetStart returns the Start field value
func (o *Afspraak) GetStart() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *Afspraak) GetStartOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *Afspraak) SetStart(v time.Time) {
	o.Start = v
}

// GetEnd returns the End field value
func (o *Afspraak) GetEnd() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.End
}

// GetEndOk returns a tuple with the End field value
// and a boolean to check if the value has been set.
func (o *Afspraak) GetEndOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.End, true
}

// SetEnd sets field value
func (o *Afspraak) SetEnd(v time.Time) {
	o.End = v
}

// GetUrl returns the Url field value
func (o *Afspraak) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *Afspraak) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *Afspraak) SetUrl(v string) {
	o.Url = v
}

// GetAansluiting returns the Aansluiting field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Afspraak) GetAansluiting() int32 {
	if o == nil || o.Aansluiting.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Aansluiting.Get()
}

// GetAansluitingOk returns a tuple with the Aansluiting field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Afspraak) GetAansluitingOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Aansluiting.Get(), o.Aansluiting.IsSet()
}

// HasAansluiting returns a boolean if a field has been set.
func (o *Afspraak) HasAansluiting() bool {
	if o != nil && o.Aansluiting.IsSet() {
		return true
	}

	return false
}

// SetAansluiting gets a reference to the given NullableInt32 and assigns it to the Aansluiting field.
func (o *Afspraak) SetAansluiting(v int32) {
	o.Aansluiting.Set(&v)
}
// SetAansluitingNil sets the value for Aansluiting to be an explicit nil
func (o *Afspraak) SetAansluitingNil() {
	o.Aansluiting.Set(nil)
}

// UnsetAansluiting ensures that no value is present for Aansluiting, not even an explicit nil
func (o *Afspraak) UnsetAansluiting() {
	o.Aansluiting.Unset()
}

func (o Afspraak) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["start_tijd"] = o.StartTijd
	}
	if o.EindTijd != nil {
		toSerialize["eind_tijd"] = o.EindTijd
	}
	if true {
		toSerialize["titel"] = o.Titel
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["start"] = o.Start
	}
	if true {
		toSerialize["end"] = o.End
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if o.Aansluiting.IsSet() {
		toSerialize["aansluiting"] = o.Aansluiting.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAfspraak struct {
	value *Afspraak
	isSet bool
}

func (v NullableAfspraak) Get() *Afspraak {
	return v.value
}

func (v *NullableAfspraak) Set(val *Afspraak) {
	v.value = val
	v.isSet = true
}

func (v NullableAfspraak) IsSet() bool {
	return v.isSet
}

func (v *NullableAfspraak) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAfspraak(val *Afspraak) *NullableAfspraak {
	return &NullableAfspraak{value: val, isSet: true}
}

func (v NullableAfspraak) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAfspraak) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


