/*
AMSVR Broker API

# Introductie     Voor u heeft u de online documentatie van de AMSVR Broker API. Omdat het een Nederlands domein      betreft worden er Engelse en Nederlandse terminologie door elkaar heen gebruikt.  Liefhebbers van de Swagger UI kunnen [hier terecht](/swagger-ui). Daarnaast is de API eveneens beschikbaar in de op endpoint niveau zoals bijvoorbeeld [hier](/api/aansluitingen).  ##        

API version: release-0.6.14
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package broker

import (
	"encoding/json"
)

// Search struct for Search
type Search struct {
	Id string `json:"id"`
	Naam string `json:"naam"`
	Aansluitnummer string `json:"aansluitnummer"`
}

// NewSearch instantiates a new Search object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearch(id string, naam string, aansluitnummer string) *Search {
	this := Search{}
	this.Id = id
	this.Naam = naam
	this.Aansluitnummer = aansluitnummer
	return &this
}

// NewSearchWithDefaults instantiates a new Search object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchWithDefaults() *Search {
	this := Search{}
	return &this
}

// GetId returns the Id field value
func (o *Search) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Search) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Search) SetId(v string) {
	o.Id = v
}

// GetNaam returns the Naam field value
func (o *Search) GetNaam() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Naam
}

// GetNaamOk returns a tuple with the Naam field value
// and a boolean to check if the value has been set.
func (o *Search) GetNaamOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Naam, true
}

// SetNaam sets field value
func (o *Search) SetNaam(v string) {
	o.Naam = v
}

// GetAansluitnummer returns the Aansluitnummer field value
func (o *Search) GetAansluitnummer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Aansluitnummer
}

// GetAansluitnummerOk returns a tuple with the Aansluitnummer field value
// and a boolean to check if the value has been set.
func (o *Search) GetAansluitnummerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Aansluitnummer, true
}

// SetAansluitnummer sets field value
func (o *Search) SetAansluitnummer(v string) {
	o.Aansluitnummer = v
}

func (o Search) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["naam"] = o.Naam
	}
	if true {
		toSerialize["aansluitnummer"] = o.Aansluitnummer
	}
	return json.Marshal(toSerialize)
}

type NullableSearch struct {
	value *Search
	isSet bool
}

func (v NullableSearch) Get() *Search {
	return v.value
}

func (v *NullableSearch) Set(val *Search) {
	v.value = val
	v.isSet = true
}

func (v NullableSearch) IsSet() bool {
	return v.isSet
}

func (v *NullableSearch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearch(val *Search) *NullableSearch {
	return &NullableSearch{value: val, isSet: true}
}

func (v NullableSearch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


