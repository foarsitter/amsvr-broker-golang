/*
AMSVR Broker API

# Introductie     Voor u heeft u de online documentatie van de AMSVR Broker API. Omdat het een Nederlands domein      betreft worden er Engelse en Nederlandse terminologie door elkaar heen gebruikt.  Liefhebbers van de Swagger UI kunnen [hier terecht](/swagger-ui). Daarnaast is de API eveneens beschikbaar in de op endpoint niveau zoals bijvoorbeeld [hier](/api/aansluitingen).  ##        

API version: release-0.6.14
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package broker

import (
	"encoding/json"
)

// SectorRequest struct for SectorRequest
type SectorRequest struct {
	Nummer int32 `json:"nummer"`
	Naam string `json:"naam"`
	Straat *string `json:"straat,omitempty"`
	Huisnummer *string `json:"huisnummer,omitempty"`
	Huisletter *string `json:"huisletter,omitempty"`
	Toevoeging *string `json:"toevoeging,omitempty"`
	Postcode *string `json:"postcode,omitempty"`
	Plaats *string `json:"plaats,omitempty"`
	// https://www.kadaster.nl/zakelijk/registraties/basisregistraties/rijksdriehoeksmeting/rijksdriehoeksstelsel
	RijksdriehoekstelX NullableFloat64 `json:"rijksdriehoekstel_x,omitempty"`
	// https://www.kadaster.nl/zakelijk/registraties/basisregistraties/rijksdriehoeksmeting/rijksdriehoeksstelsel
	RijksdriehoekstelY NullableFloat64 `json:"rijksdriehoekstel_y,omitempty"`
	// 0 = Test, 1 = Actief, 2 = Passief
	Toestand NullableMeldingToestand `json:"toestand,omitempty"`
	Gebruiksfunctie NullableGebruiksfunctieEnum `json:"gebruiksfunctie,omitempty"`
	BagLookupId *string `json:"bag_lookup_id,omitempty"`
	Storingscodes []StoringscodesEnum `json:"storingscodes,omitempty"`
}

// NewSectorRequest instantiates a new SectorRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSectorRequest(nummer int32, naam string) *SectorRequest {
	this := SectorRequest{}
	this.Nummer = nummer
	this.Naam = naam
	return &this
}

// NewSectorRequestWithDefaults instantiates a new SectorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSectorRequestWithDefaults() *SectorRequest {
	this := SectorRequest{}
	return &this
}

// GetNummer returns the Nummer field value
func (o *SectorRequest) GetNummer() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Nummer
}

// GetNummerOk returns a tuple with the Nummer field value
// and a boolean to check if the value has been set.
func (o *SectorRequest) GetNummerOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nummer, true
}

// SetNummer sets field value
func (o *SectorRequest) SetNummer(v int32) {
	o.Nummer = v
}

// GetNaam returns the Naam field value
func (o *SectorRequest) GetNaam() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Naam
}

// GetNaamOk returns a tuple with the Naam field value
// and a boolean to check if the value has been set.
func (o *SectorRequest) GetNaamOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Naam, true
}

// SetNaam sets field value
func (o *SectorRequest) SetNaam(v string) {
	o.Naam = v
}

// GetStraat returns the Straat field value if set, zero value otherwise.
func (o *SectorRequest) GetStraat() string {
	if o == nil || o.Straat == nil {
		var ret string
		return ret
	}
	return *o.Straat
}

// GetStraatOk returns a tuple with the Straat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SectorRequest) GetStraatOk() (*string, bool) {
	if o == nil || o.Straat == nil {
		return nil, false
	}
	return o.Straat, true
}

// HasStraat returns a boolean if a field has been set.
func (o *SectorRequest) HasStraat() bool {
	if o != nil && o.Straat != nil {
		return true
	}

	return false
}

// SetStraat gets a reference to the given string and assigns it to the Straat field.
func (o *SectorRequest) SetStraat(v string) {
	o.Straat = &v
}

// GetHuisnummer returns the Huisnummer field value if set, zero value otherwise.
func (o *SectorRequest) GetHuisnummer() string {
	if o == nil || o.Huisnummer == nil {
		var ret string
		return ret
	}
	return *o.Huisnummer
}

// GetHuisnummerOk returns a tuple with the Huisnummer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SectorRequest) GetHuisnummerOk() (*string, bool) {
	if o == nil || o.Huisnummer == nil {
		return nil, false
	}
	return o.Huisnummer, true
}

// HasHuisnummer returns a boolean if a field has been set.
func (o *SectorRequest) HasHuisnummer() bool {
	if o != nil && o.Huisnummer != nil {
		return true
	}

	return false
}

// SetHuisnummer gets a reference to the given string and assigns it to the Huisnummer field.
func (o *SectorRequest) SetHuisnummer(v string) {
	o.Huisnummer = &v
}

// GetHuisletter returns the Huisletter field value if set, zero value otherwise.
func (o *SectorRequest) GetHuisletter() string {
	if o == nil || o.Huisletter == nil {
		var ret string
		return ret
	}
	return *o.Huisletter
}

// GetHuisletterOk returns a tuple with the Huisletter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SectorRequest) GetHuisletterOk() (*string, bool) {
	if o == nil || o.Huisletter == nil {
		return nil, false
	}
	return o.Huisletter, true
}

// HasHuisletter returns a boolean if a field has been set.
func (o *SectorRequest) HasHuisletter() bool {
	if o != nil && o.Huisletter != nil {
		return true
	}

	return false
}

// SetHuisletter gets a reference to the given string and assigns it to the Huisletter field.
func (o *SectorRequest) SetHuisletter(v string) {
	o.Huisletter = &v
}

// GetToevoeging returns the Toevoeging field value if set, zero value otherwise.
func (o *SectorRequest) GetToevoeging() string {
	if o == nil || o.Toevoeging == nil {
		var ret string
		return ret
	}
	return *o.Toevoeging
}

// GetToevoegingOk returns a tuple with the Toevoeging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SectorRequest) GetToevoegingOk() (*string, bool) {
	if o == nil || o.Toevoeging == nil {
		return nil, false
	}
	return o.Toevoeging, true
}

// HasToevoeging returns a boolean if a field has been set.
func (o *SectorRequest) HasToevoeging() bool {
	if o != nil && o.Toevoeging != nil {
		return true
	}

	return false
}

// SetToevoeging gets a reference to the given string and assigns it to the Toevoeging field.
func (o *SectorRequest) SetToevoeging(v string) {
	o.Toevoeging = &v
}

// GetPostcode returns the Postcode field value if set, zero value otherwise.
func (o *SectorRequest) GetPostcode() string {
	if o == nil || o.Postcode == nil {
		var ret string
		return ret
	}
	return *o.Postcode
}

// GetPostcodeOk returns a tuple with the Postcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SectorRequest) GetPostcodeOk() (*string, bool) {
	if o == nil || o.Postcode == nil {
		return nil, false
	}
	return o.Postcode, true
}

// HasPostcode returns a boolean if a field has been set.
func (o *SectorRequest) HasPostcode() bool {
	if o != nil && o.Postcode != nil {
		return true
	}

	return false
}

// SetPostcode gets a reference to the given string and assigns it to the Postcode field.
func (o *SectorRequest) SetPostcode(v string) {
	o.Postcode = &v
}

// GetPlaats returns the Plaats field value if set, zero value otherwise.
func (o *SectorRequest) GetPlaats() string {
	if o == nil || o.Plaats == nil {
		var ret string
		return ret
	}
	return *o.Plaats
}

// GetPlaatsOk returns a tuple with the Plaats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SectorRequest) GetPlaatsOk() (*string, bool) {
	if o == nil || o.Plaats == nil {
		return nil, false
	}
	return o.Plaats, true
}

// HasPlaats returns a boolean if a field has been set.
func (o *SectorRequest) HasPlaats() bool {
	if o != nil && o.Plaats != nil {
		return true
	}

	return false
}

// SetPlaats gets a reference to the given string and assigns it to the Plaats field.
func (o *SectorRequest) SetPlaats(v string) {
	o.Plaats = &v
}

// GetRijksdriehoekstelX returns the RijksdriehoekstelX field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SectorRequest) GetRijksdriehoekstelX() float64 {
	if o == nil || o.RijksdriehoekstelX.Get() == nil {
		var ret float64
		return ret
	}
	return *o.RijksdriehoekstelX.Get()
}

// GetRijksdriehoekstelXOk returns a tuple with the RijksdriehoekstelX field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SectorRequest) GetRijksdriehoekstelXOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RijksdriehoekstelX.Get(), o.RijksdriehoekstelX.IsSet()
}

// HasRijksdriehoekstelX returns a boolean if a field has been set.
func (o *SectorRequest) HasRijksdriehoekstelX() bool {
	if o != nil && o.RijksdriehoekstelX.IsSet() {
		return true
	}

	return false
}

// SetRijksdriehoekstelX gets a reference to the given NullableFloat64 and assigns it to the RijksdriehoekstelX field.
func (o *SectorRequest) SetRijksdriehoekstelX(v float64) {
	o.RijksdriehoekstelX.Set(&v)
}
// SetRijksdriehoekstelXNil sets the value for RijksdriehoekstelX to be an explicit nil
func (o *SectorRequest) SetRijksdriehoekstelXNil() {
	o.RijksdriehoekstelX.Set(nil)
}

// UnsetRijksdriehoekstelX ensures that no value is present for RijksdriehoekstelX, not even an explicit nil
func (o *SectorRequest) UnsetRijksdriehoekstelX() {
	o.RijksdriehoekstelX.Unset()
}

// GetRijksdriehoekstelY returns the RijksdriehoekstelY field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SectorRequest) GetRijksdriehoekstelY() float64 {
	if o == nil || o.RijksdriehoekstelY.Get() == nil {
		var ret float64
		return ret
	}
	return *o.RijksdriehoekstelY.Get()
}

// GetRijksdriehoekstelYOk returns a tuple with the RijksdriehoekstelY field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SectorRequest) GetRijksdriehoekstelYOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RijksdriehoekstelY.Get(), o.RijksdriehoekstelY.IsSet()
}

// HasRijksdriehoekstelY returns a boolean if a field has been set.
func (o *SectorRequest) HasRijksdriehoekstelY() bool {
	if o != nil && o.RijksdriehoekstelY.IsSet() {
		return true
	}

	return false
}

// SetRijksdriehoekstelY gets a reference to the given NullableFloat64 and assigns it to the RijksdriehoekstelY field.
func (o *SectorRequest) SetRijksdriehoekstelY(v float64) {
	o.RijksdriehoekstelY.Set(&v)
}
// SetRijksdriehoekstelYNil sets the value for RijksdriehoekstelY to be an explicit nil
func (o *SectorRequest) SetRijksdriehoekstelYNil() {
	o.RijksdriehoekstelY.Set(nil)
}

// UnsetRijksdriehoekstelY ensures that no value is present for RijksdriehoekstelY, not even an explicit nil
func (o *SectorRequest) UnsetRijksdriehoekstelY() {
	o.RijksdriehoekstelY.Unset()
}

// GetToestand returns the Toestand field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SectorRequest) GetToestand() MeldingToestand {
	if o == nil || o.Toestand.Get() == nil {
		var ret MeldingToestand
		return ret
	}
	return *o.Toestand.Get()
}

// GetToestandOk returns a tuple with the Toestand field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SectorRequest) GetToestandOk() (*MeldingToestand, bool) {
	if o == nil {
		return nil, false
	}
	return o.Toestand.Get(), o.Toestand.IsSet()
}

// HasToestand returns a boolean if a field has been set.
func (o *SectorRequest) HasToestand() bool {
	if o != nil && o.Toestand.IsSet() {
		return true
	}

	return false
}

// SetToestand gets a reference to the given NullableMeldingToestand and assigns it to the Toestand field.
func (o *SectorRequest) SetToestand(v MeldingToestand) {
	o.Toestand.Set(&v)
}
// SetToestandNil sets the value for Toestand to be an explicit nil
func (o *SectorRequest) SetToestandNil() {
	o.Toestand.Set(nil)
}

// UnsetToestand ensures that no value is present for Toestand, not even an explicit nil
func (o *SectorRequest) UnsetToestand() {
	o.Toestand.Unset()
}

// GetGebruiksfunctie returns the Gebruiksfunctie field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SectorRequest) GetGebruiksfunctie() GebruiksfunctieEnum {
	if o == nil || o.Gebruiksfunctie.Get() == nil {
		var ret GebruiksfunctieEnum
		return ret
	}
	return *o.Gebruiksfunctie.Get()
}

// GetGebruiksfunctieOk returns a tuple with the Gebruiksfunctie field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SectorRequest) GetGebruiksfunctieOk() (*GebruiksfunctieEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.Gebruiksfunctie.Get(), o.Gebruiksfunctie.IsSet()
}

// HasGebruiksfunctie returns a boolean if a field has been set.
func (o *SectorRequest) HasGebruiksfunctie() bool {
	if o != nil && o.Gebruiksfunctie.IsSet() {
		return true
	}

	return false
}

// SetGebruiksfunctie gets a reference to the given NullableGebruiksfunctieEnum and assigns it to the Gebruiksfunctie field.
func (o *SectorRequest) SetGebruiksfunctie(v GebruiksfunctieEnum) {
	o.Gebruiksfunctie.Set(&v)
}
// SetGebruiksfunctieNil sets the value for Gebruiksfunctie to be an explicit nil
func (o *SectorRequest) SetGebruiksfunctieNil() {
	o.Gebruiksfunctie.Set(nil)
}

// UnsetGebruiksfunctie ensures that no value is present for Gebruiksfunctie, not even an explicit nil
func (o *SectorRequest) UnsetGebruiksfunctie() {
	o.Gebruiksfunctie.Unset()
}

// GetBagLookupId returns the BagLookupId field value if set, zero value otherwise.
func (o *SectorRequest) GetBagLookupId() string {
	if o == nil || o.BagLookupId == nil {
		var ret string
		return ret
	}
	return *o.BagLookupId
}

// GetBagLookupIdOk returns a tuple with the BagLookupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SectorRequest) GetBagLookupIdOk() (*string, bool) {
	if o == nil || o.BagLookupId == nil {
		return nil, false
	}
	return o.BagLookupId, true
}

// HasBagLookupId returns a boolean if a field has been set.
func (o *SectorRequest) HasBagLookupId() bool {
	if o != nil && o.BagLookupId != nil {
		return true
	}

	return false
}

// SetBagLookupId gets a reference to the given string and assigns it to the BagLookupId field.
func (o *SectorRequest) SetBagLookupId(v string) {
	o.BagLookupId = &v
}

// GetStoringscodes returns the Storingscodes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SectorRequest) GetStoringscodes() []StoringscodesEnum {
	if o == nil {
		var ret []StoringscodesEnum
		return ret
	}
	return o.Storingscodes
}

// GetStoringscodesOk returns a tuple with the Storingscodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SectorRequest) GetStoringscodesOk() ([]StoringscodesEnum, bool) {
	if o == nil || o.Storingscodes == nil {
		return nil, false
	}
	return o.Storingscodes, true
}

// HasStoringscodes returns a boolean if a field has been set.
func (o *SectorRequest) HasStoringscodes() bool {
	if o != nil && o.Storingscodes != nil {
		return true
	}

	return false
}

// SetStoringscodes gets a reference to the given []StoringscodesEnum and assigns it to the Storingscodes field.
func (o *SectorRequest) SetStoringscodes(v []StoringscodesEnum) {
	o.Storingscodes = v
}

func (o SectorRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["nummer"] = o.Nummer
	}
	if true {
		toSerialize["naam"] = o.Naam
	}
	if o.Straat != nil {
		toSerialize["straat"] = o.Straat
	}
	if o.Huisnummer != nil {
		toSerialize["huisnummer"] = o.Huisnummer
	}
	if o.Huisletter != nil {
		toSerialize["huisletter"] = o.Huisletter
	}
	if o.Toevoeging != nil {
		toSerialize["toevoeging"] = o.Toevoeging
	}
	if o.Postcode != nil {
		toSerialize["postcode"] = o.Postcode
	}
	if o.Plaats != nil {
		toSerialize["plaats"] = o.Plaats
	}
	if o.RijksdriehoekstelX.IsSet() {
		toSerialize["rijksdriehoekstel_x"] = o.RijksdriehoekstelX.Get()
	}
	if o.RijksdriehoekstelY.IsSet() {
		toSerialize["rijksdriehoekstel_y"] = o.RijksdriehoekstelY.Get()
	}
	if o.Toestand.IsSet() {
		toSerialize["toestand"] = o.Toestand.Get()
	}
	if o.Gebruiksfunctie.IsSet() {
		toSerialize["gebruiksfunctie"] = o.Gebruiksfunctie.Get()
	}
	if o.BagLookupId != nil {
		toSerialize["bag_lookup_id"] = o.BagLookupId
	}
	if o.Storingscodes != nil {
		toSerialize["storingscodes"] = o.Storingscodes
	}
	return json.Marshal(toSerialize)
}

type NullableSectorRequest struct {
	value *SectorRequest
	isSet bool
}

func (v NullableSectorRequest) Get() *SectorRequest {
	return v.value
}

func (v *NullableSectorRequest) Set(val *SectorRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSectorRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSectorRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSectorRequest(val *SectorRequest) *NullableSectorRequest {
	return &NullableSectorRequest{value: val, isSet: true}
}

func (v NullableSectorRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSectorRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


