/*
AMSVR Broker API

# Introductie     Voor u heeft u de online documentatie van de AMSVR Broker API. Omdat het een Nederlands domein      betreft worden er Engelse en Nederlandse terminologie door elkaar heen gebruikt.  Liefhebbers van de Swagger UI kunnen [hier terecht](/swagger-ui). Daarnaast is de API eveneens beschikbaar in de op endpoint niveau zoals bijvoorbeeld [hier](/api/aansluitingen).  ##        

API version: release-0.6.14
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package broker

import (
	"encoding/json"
)

// ATSP struct for ATSP
type ATSP struct {
	Id int32 `json:"id"`
	Naam string `json:"naam"`
	Code NullableString `json:"code,omitempty"`
}

// NewATSP instantiates a new ATSP object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewATSP(id int32, naam string) *ATSP {
	this := ATSP{}
	this.Id = id
	this.Naam = naam
	return &this
}

// NewATSPWithDefaults instantiates a new ATSP object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewATSPWithDefaults() *ATSP {
	this := ATSP{}
	return &this
}

// GetId returns the Id field value
func (o *ATSP) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ATSP) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ATSP) SetId(v int32) {
	o.Id = v
}

// GetNaam returns the Naam field value
func (o *ATSP) GetNaam() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Naam
}

// GetNaamOk returns a tuple with the Naam field value
// and a boolean to check if the value has been set.
func (o *ATSP) GetNaamOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Naam, true
}

// SetNaam sets field value
func (o *ATSP) SetNaam(v string) {
	o.Naam = v
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ATSP) GetCode() string {
	if o == nil || o.Code.Get() == nil {
		var ret string
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ATSP) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *ATSP) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableString and assigns it to the Code field.
func (o *ATSP) SetCode(v string) {
	o.Code.Set(&v)
}
// SetCodeNil sets the value for Code to be an explicit nil
func (o *ATSP) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *ATSP) UnsetCode() {
	o.Code.Unset()
}

func (o ATSP) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["naam"] = o.Naam
	}
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableATSP struct {
	value *ATSP
	isSet bool
}

func (v NullableATSP) Get() *ATSP {
	return v.value
}

func (v *NullableATSP) Set(val *ATSP) {
	v.value = val
	v.isSet = true
}

func (v NullableATSP) IsSet() bool {
	return v.isSet
}

func (v *NullableATSP) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableATSP(val *ATSP) *NullableATSP {
	return &NullableATSP{value: val, isSet: true}
}

func (v NullableATSP) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableATSP) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


