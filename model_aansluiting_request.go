/*
AMSVR Broker API

# Introductie     Voor u heeft u de online documentatie van de AMSVR Broker API. Omdat het een Nederlands domein      betreft worden er Engelse en Nederlandse terminologie door elkaar heen gebruikt.  Liefhebbers van de Swagger UI kunnen [hier terecht](/swagger-ui). Daarnaast is de API eveneens beschikbaar in de op endpoint niveau zoals bijvoorbeeld [hier](/api/aansluitingen).  ##        

API version: release-0.6.14
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package broker

import (
	"encoding/json"
)

// AansluitingRequest struct for AansluitingRequest
type AansluitingRequest struct {
	Naam string `json:"naam"`
	Aansluitnummer string `json:"aansluitnummer"`
	Atsp int32 `json:"atsp"`
	Gemeente NullableInt32 `json:"gemeente,omitempty"`
	Straat *string `json:"straat,omitempty"`
	Huisnummer *string `json:"huisnummer,omitempty"`
	Huisletter *string `json:"huisletter,omitempty"`
	Toevoeging *string `json:"toevoeging,omitempty"`
	Postcode *string `json:"postcode,omitempty"`
	Plaats *string `json:"plaats,omitempty"`
	BagLookupId *string `json:"bag_lookup_id,omitempty"`
	BagNietBeschikbaar NullableBool `json:"bag_niet_beschikbaar,omitempty"`
	BagComment *string `json:"bag_comment,omitempty"`
	// https://www.kadaster.nl/zakelijk/registraties/basisregistraties/rijksdriehoeksmeting/rijksdriehoeksstelsel
	RijksdriehoekstelX NullableFloat64 `json:"rijksdriehoekstel_x,omitempty"`
	// https://www.kadaster.nl/zakelijk/registraties/basisregistraties/rijksdriehoeksmeting/rijksdriehoeksstelsel
	RijksdriehoekstelY NullableFloat64 `json:"rijksdriehoekstel_y,omitempty"`
	Gebruiksfunctie NullableGebruiksfunctieEnum `json:"gebruiksfunctie,omitempty"`
	Bijzonderheden NullableString `json:"bijzonderheden,omitempty"`
}

// NewAansluitingRequest instantiates a new AansluitingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAansluitingRequest(naam string, aansluitnummer string, atsp int32) *AansluitingRequest {
	this := AansluitingRequest{}
	this.Naam = naam
	this.Aansluitnummer = aansluitnummer
	this.Atsp = atsp
	return &this
}

// NewAansluitingRequestWithDefaults instantiates a new AansluitingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAansluitingRequestWithDefaults() *AansluitingRequest {
	this := AansluitingRequest{}
	return &this
}

// GetNaam returns the Naam field value
func (o *AansluitingRequest) GetNaam() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Naam
}

// GetNaamOk returns a tuple with the Naam field value
// and a boolean to check if the value has been set.
func (o *AansluitingRequest) GetNaamOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Naam, true
}

// SetNaam sets field value
func (o *AansluitingRequest) SetNaam(v string) {
	o.Naam = v
}

// GetAansluitnummer returns the Aansluitnummer field value
func (o *AansluitingRequest) GetAansluitnummer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Aansluitnummer
}

// GetAansluitnummerOk returns a tuple with the Aansluitnummer field value
// and a boolean to check if the value has been set.
func (o *AansluitingRequest) GetAansluitnummerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Aansluitnummer, true
}

// SetAansluitnummer sets field value
func (o *AansluitingRequest) SetAansluitnummer(v string) {
	o.Aansluitnummer = v
}

// GetAtsp returns the Atsp field value
func (o *AansluitingRequest) GetAtsp() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Atsp
}

// GetAtspOk returns a tuple with the Atsp field value
// and a boolean to check if the value has been set.
func (o *AansluitingRequest) GetAtspOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Atsp, true
}

// SetAtsp sets field value
func (o *AansluitingRequest) SetAtsp(v int32) {
	o.Atsp = v
}

// GetGemeente returns the Gemeente field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AansluitingRequest) GetGemeente() int32 {
	if o == nil || o.Gemeente.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Gemeente.Get()
}

// GetGemeenteOk returns a tuple with the Gemeente field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AansluitingRequest) GetGemeenteOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Gemeente.Get(), o.Gemeente.IsSet()
}

// HasGemeente returns a boolean if a field has been set.
func (o *AansluitingRequest) HasGemeente() bool {
	if o != nil && o.Gemeente.IsSet() {
		return true
	}

	return false
}

// SetGemeente gets a reference to the given NullableInt32 and assigns it to the Gemeente field.
func (o *AansluitingRequest) SetGemeente(v int32) {
	o.Gemeente.Set(&v)
}
// SetGemeenteNil sets the value for Gemeente to be an explicit nil
func (o *AansluitingRequest) SetGemeenteNil() {
	o.Gemeente.Set(nil)
}

// UnsetGemeente ensures that no value is present for Gemeente, not even an explicit nil
func (o *AansluitingRequest) UnsetGemeente() {
	o.Gemeente.Unset()
}

// GetStraat returns the Straat field value if set, zero value otherwise.
func (o *AansluitingRequest) GetStraat() string {
	if o == nil || o.Straat == nil {
		var ret string
		return ret
	}
	return *o.Straat
}

// GetStraatOk returns a tuple with the Straat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AansluitingRequest) GetStraatOk() (*string, bool) {
	if o == nil || o.Straat == nil {
		return nil, false
	}
	return o.Straat, true
}

// HasStraat returns a boolean if a field has been set.
func (o *AansluitingRequest) HasStraat() bool {
	if o != nil && o.Straat != nil {
		return true
	}

	return false
}

// SetStraat gets a reference to the given string and assigns it to the Straat field.
func (o *AansluitingRequest) SetStraat(v string) {
	o.Straat = &v
}

// GetHuisnummer returns the Huisnummer field value if set, zero value otherwise.
func (o *AansluitingRequest) GetHuisnummer() string {
	if o == nil || o.Huisnummer == nil {
		var ret string
		return ret
	}
	return *o.Huisnummer
}

// GetHuisnummerOk returns a tuple with the Huisnummer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AansluitingRequest) GetHuisnummerOk() (*string, bool) {
	if o == nil || o.Huisnummer == nil {
		return nil, false
	}
	return o.Huisnummer, true
}

// HasHuisnummer returns a boolean if a field has been set.
func (o *AansluitingRequest) HasHuisnummer() bool {
	if o != nil && o.Huisnummer != nil {
		return true
	}

	return false
}

// SetHuisnummer gets a reference to the given string and assigns it to the Huisnummer field.
func (o *AansluitingRequest) SetHuisnummer(v string) {
	o.Huisnummer = &v
}

// GetHuisletter returns the Huisletter field value if set, zero value otherwise.
func (o *AansluitingRequest) GetHuisletter() string {
	if o == nil || o.Huisletter == nil {
		var ret string
		return ret
	}
	return *o.Huisletter
}

// GetHuisletterOk returns a tuple with the Huisletter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AansluitingRequest) GetHuisletterOk() (*string, bool) {
	if o == nil || o.Huisletter == nil {
		return nil, false
	}
	return o.Huisletter, true
}

// HasHuisletter returns a boolean if a field has been set.
func (o *AansluitingRequest) HasHuisletter() bool {
	if o != nil && o.Huisletter != nil {
		return true
	}

	return false
}

// SetHuisletter gets a reference to the given string and assigns it to the Huisletter field.
func (o *AansluitingRequest) SetHuisletter(v string) {
	o.Huisletter = &v
}

// GetToevoeging returns the Toevoeging field value if set, zero value otherwise.
func (o *AansluitingRequest) GetToevoeging() string {
	if o == nil || o.Toevoeging == nil {
		var ret string
		return ret
	}
	return *o.Toevoeging
}

// GetToevoegingOk returns a tuple with the Toevoeging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AansluitingRequest) GetToevoegingOk() (*string, bool) {
	if o == nil || o.Toevoeging == nil {
		return nil, false
	}
	return o.Toevoeging, true
}

// HasToevoeging returns a boolean if a field has been set.
func (o *AansluitingRequest) HasToevoeging() bool {
	if o != nil && o.Toevoeging != nil {
		return true
	}

	return false
}

// SetToevoeging gets a reference to the given string and assigns it to the Toevoeging field.
func (o *AansluitingRequest) SetToevoeging(v string) {
	o.Toevoeging = &v
}

// GetPostcode returns the Postcode field value if set, zero value otherwise.
func (o *AansluitingRequest) GetPostcode() string {
	if o == nil || o.Postcode == nil {
		var ret string
		return ret
	}
	return *o.Postcode
}

// GetPostcodeOk returns a tuple with the Postcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AansluitingRequest) GetPostcodeOk() (*string, bool) {
	if o == nil || o.Postcode == nil {
		return nil, false
	}
	return o.Postcode, true
}

// HasPostcode returns a boolean if a field has been set.
func (o *AansluitingRequest) HasPostcode() bool {
	if o != nil && o.Postcode != nil {
		return true
	}

	return false
}

// SetPostcode gets a reference to the given string and assigns it to the Postcode field.
func (o *AansluitingRequest) SetPostcode(v string) {
	o.Postcode = &v
}

// GetPlaats returns the Plaats field value if set, zero value otherwise.
func (o *AansluitingRequest) GetPlaats() string {
	if o == nil || o.Plaats == nil {
		var ret string
		return ret
	}
	return *o.Plaats
}

// GetPlaatsOk returns a tuple with the Plaats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AansluitingRequest) GetPlaatsOk() (*string, bool) {
	if o == nil || o.Plaats == nil {
		return nil, false
	}
	return o.Plaats, true
}

// HasPlaats returns a boolean if a field has been set.
func (o *AansluitingRequest) HasPlaats() bool {
	if o != nil && o.Plaats != nil {
		return true
	}

	return false
}

// SetPlaats gets a reference to the given string and assigns it to the Plaats field.
func (o *AansluitingRequest) SetPlaats(v string) {
	o.Plaats = &v
}

// GetBagLookupId returns the BagLookupId field value if set, zero value otherwise.
func (o *AansluitingRequest) GetBagLookupId() string {
	if o == nil || o.BagLookupId == nil {
		var ret string
		return ret
	}
	return *o.BagLookupId
}

// GetBagLookupIdOk returns a tuple with the BagLookupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AansluitingRequest) GetBagLookupIdOk() (*string, bool) {
	if o == nil || o.BagLookupId == nil {
		return nil, false
	}
	return o.BagLookupId, true
}

// HasBagLookupId returns a boolean if a field has been set.
func (o *AansluitingRequest) HasBagLookupId() bool {
	if o != nil && o.BagLookupId != nil {
		return true
	}

	return false
}

// SetBagLookupId gets a reference to the given string and assigns it to the BagLookupId field.
func (o *AansluitingRequest) SetBagLookupId(v string) {
	o.BagLookupId = &v
}

// GetBagNietBeschikbaar returns the BagNietBeschikbaar field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AansluitingRequest) GetBagNietBeschikbaar() bool {
	if o == nil || o.BagNietBeschikbaar.Get() == nil {
		var ret bool
		return ret
	}
	return *o.BagNietBeschikbaar.Get()
}

// GetBagNietBeschikbaarOk returns a tuple with the BagNietBeschikbaar field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AansluitingRequest) GetBagNietBeschikbaarOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BagNietBeschikbaar.Get(), o.BagNietBeschikbaar.IsSet()
}

// HasBagNietBeschikbaar returns a boolean if a field has been set.
func (o *AansluitingRequest) HasBagNietBeschikbaar() bool {
	if o != nil && o.BagNietBeschikbaar.IsSet() {
		return true
	}

	return false
}

// SetBagNietBeschikbaar gets a reference to the given NullableBool and assigns it to the BagNietBeschikbaar field.
func (o *AansluitingRequest) SetBagNietBeschikbaar(v bool) {
	o.BagNietBeschikbaar.Set(&v)
}
// SetBagNietBeschikbaarNil sets the value for BagNietBeschikbaar to be an explicit nil
func (o *AansluitingRequest) SetBagNietBeschikbaarNil() {
	o.BagNietBeschikbaar.Set(nil)
}

// UnsetBagNietBeschikbaar ensures that no value is present for BagNietBeschikbaar, not even an explicit nil
func (o *AansluitingRequest) UnsetBagNietBeschikbaar() {
	o.BagNietBeschikbaar.Unset()
}

// GetBagComment returns the BagComment field value if set, zero value otherwise.
func (o *AansluitingRequest) GetBagComment() string {
	if o == nil || o.BagComment == nil {
		var ret string
		return ret
	}
	return *o.BagComment
}

// GetBagCommentOk returns a tuple with the BagComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AansluitingRequest) GetBagCommentOk() (*string, bool) {
	if o == nil || o.BagComment == nil {
		return nil, false
	}
	return o.BagComment, true
}

// HasBagComment returns a boolean if a field has been set.
func (o *AansluitingRequest) HasBagComment() bool {
	if o != nil && o.BagComment != nil {
		return true
	}

	return false
}

// SetBagComment gets a reference to the given string and assigns it to the BagComment field.
func (o *AansluitingRequest) SetBagComment(v string) {
	o.BagComment = &v
}

// GetRijksdriehoekstelX returns the RijksdriehoekstelX field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AansluitingRequest) GetRijksdriehoekstelX() float64 {
	if o == nil || o.RijksdriehoekstelX.Get() == nil {
		var ret float64
		return ret
	}
	return *o.RijksdriehoekstelX.Get()
}

// GetRijksdriehoekstelXOk returns a tuple with the RijksdriehoekstelX field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AansluitingRequest) GetRijksdriehoekstelXOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RijksdriehoekstelX.Get(), o.RijksdriehoekstelX.IsSet()
}

// HasRijksdriehoekstelX returns a boolean if a field has been set.
func (o *AansluitingRequest) HasRijksdriehoekstelX() bool {
	if o != nil && o.RijksdriehoekstelX.IsSet() {
		return true
	}

	return false
}

// SetRijksdriehoekstelX gets a reference to the given NullableFloat64 and assigns it to the RijksdriehoekstelX field.
func (o *AansluitingRequest) SetRijksdriehoekstelX(v float64) {
	o.RijksdriehoekstelX.Set(&v)
}
// SetRijksdriehoekstelXNil sets the value for RijksdriehoekstelX to be an explicit nil
func (o *AansluitingRequest) SetRijksdriehoekstelXNil() {
	o.RijksdriehoekstelX.Set(nil)
}

// UnsetRijksdriehoekstelX ensures that no value is present for RijksdriehoekstelX, not even an explicit nil
func (o *AansluitingRequest) UnsetRijksdriehoekstelX() {
	o.RijksdriehoekstelX.Unset()
}

// GetRijksdriehoekstelY returns the RijksdriehoekstelY field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AansluitingRequest) GetRijksdriehoekstelY() float64 {
	if o == nil || o.RijksdriehoekstelY.Get() == nil {
		var ret float64
		return ret
	}
	return *o.RijksdriehoekstelY.Get()
}

// GetRijksdriehoekstelYOk returns a tuple with the RijksdriehoekstelY field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AansluitingRequest) GetRijksdriehoekstelYOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RijksdriehoekstelY.Get(), o.RijksdriehoekstelY.IsSet()
}

// HasRijksdriehoekstelY returns a boolean if a field has been set.
func (o *AansluitingRequest) HasRijksdriehoekstelY() bool {
	if o != nil && o.RijksdriehoekstelY.IsSet() {
		return true
	}

	return false
}

// SetRijksdriehoekstelY gets a reference to the given NullableFloat64 and assigns it to the RijksdriehoekstelY field.
func (o *AansluitingRequest) SetRijksdriehoekstelY(v float64) {
	o.RijksdriehoekstelY.Set(&v)
}
// SetRijksdriehoekstelYNil sets the value for RijksdriehoekstelY to be an explicit nil
func (o *AansluitingRequest) SetRijksdriehoekstelYNil() {
	o.RijksdriehoekstelY.Set(nil)
}

// UnsetRijksdriehoekstelY ensures that no value is present for RijksdriehoekstelY, not even an explicit nil
func (o *AansluitingRequest) UnsetRijksdriehoekstelY() {
	o.RijksdriehoekstelY.Unset()
}

// GetGebruiksfunctie returns the Gebruiksfunctie field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AansluitingRequest) GetGebruiksfunctie() GebruiksfunctieEnum {
	if o == nil || o.Gebruiksfunctie.Get() == nil {
		var ret GebruiksfunctieEnum
		return ret
	}
	return *o.Gebruiksfunctie.Get()
}

// GetGebruiksfunctieOk returns a tuple with the Gebruiksfunctie field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AansluitingRequest) GetGebruiksfunctieOk() (*GebruiksfunctieEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.Gebruiksfunctie.Get(), o.Gebruiksfunctie.IsSet()
}

// HasGebruiksfunctie returns a boolean if a field has been set.
func (o *AansluitingRequest) HasGebruiksfunctie() bool {
	if o != nil && o.Gebruiksfunctie.IsSet() {
		return true
	}

	return false
}

// SetGebruiksfunctie gets a reference to the given NullableGebruiksfunctieEnum and assigns it to the Gebruiksfunctie field.
func (o *AansluitingRequest) SetGebruiksfunctie(v GebruiksfunctieEnum) {
	o.Gebruiksfunctie.Set(&v)
}
// SetGebruiksfunctieNil sets the value for Gebruiksfunctie to be an explicit nil
func (o *AansluitingRequest) SetGebruiksfunctieNil() {
	o.Gebruiksfunctie.Set(nil)
}

// UnsetGebruiksfunctie ensures that no value is present for Gebruiksfunctie, not even an explicit nil
func (o *AansluitingRequest) UnsetGebruiksfunctie() {
	o.Gebruiksfunctie.Unset()
}

// GetBijzonderheden returns the Bijzonderheden field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AansluitingRequest) GetBijzonderheden() string {
	if o == nil || o.Bijzonderheden.Get() == nil {
		var ret string
		return ret
	}
	return *o.Bijzonderheden.Get()
}

// GetBijzonderhedenOk returns a tuple with the Bijzonderheden field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AansluitingRequest) GetBijzonderhedenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bijzonderheden.Get(), o.Bijzonderheden.IsSet()
}

// HasBijzonderheden returns a boolean if a field has been set.
func (o *AansluitingRequest) HasBijzonderheden() bool {
	if o != nil && o.Bijzonderheden.IsSet() {
		return true
	}

	return false
}

// SetBijzonderheden gets a reference to the given NullableString and assigns it to the Bijzonderheden field.
func (o *AansluitingRequest) SetBijzonderheden(v string) {
	o.Bijzonderheden.Set(&v)
}
// SetBijzonderhedenNil sets the value for Bijzonderheden to be an explicit nil
func (o *AansluitingRequest) SetBijzonderhedenNil() {
	o.Bijzonderheden.Set(nil)
}

// UnsetBijzonderheden ensures that no value is present for Bijzonderheden, not even an explicit nil
func (o *AansluitingRequest) UnsetBijzonderheden() {
	o.Bijzonderheden.Unset()
}

func (o AansluitingRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["naam"] = o.Naam
	}
	if true {
		toSerialize["aansluitnummer"] = o.Aansluitnummer
	}
	if true {
		toSerialize["atsp"] = o.Atsp
	}
	if o.Gemeente.IsSet() {
		toSerialize["gemeente"] = o.Gemeente.Get()
	}
	if o.Straat != nil {
		toSerialize["straat"] = o.Straat
	}
	if o.Huisnummer != nil {
		toSerialize["huisnummer"] = o.Huisnummer
	}
	if o.Huisletter != nil {
		toSerialize["huisletter"] = o.Huisletter
	}
	if o.Toevoeging != nil {
		toSerialize["toevoeging"] = o.Toevoeging
	}
	if o.Postcode != nil {
		toSerialize["postcode"] = o.Postcode
	}
	if o.Plaats != nil {
		toSerialize["plaats"] = o.Plaats
	}
	if o.BagLookupId != nil {
		toSerialize["bag_lookup_id"] = o.BagLookupId
	}
	if o.BagNietBeschikbaar.IsSet() {
		toSerialize["bag_niet_beschikbaar"] = o.BagNietBeschikbaar.Get()
	}
	if o.BagComment != nil {
		toSerialize["bag_comment"] = o.BagComment
	}
	if o.RijksdriehoekstelX.IsSet() {
		toSerialize["rijksdriehoekstel_x"] = o.RijksdriehoekstelX.Get()
	}
	if o.RijksdriehoekstelY.IsSet() {
		toSerialize["rijksdriehoekstel_y"] = o.RijksdriehoekstelY.Get()
	}
	if o.Gebruiksfunctie.IsSet() {
		toSerialize["gebruiksfunctie"] = o.Gebruiksfunctie.Get()
	}
	if o.Bijzonderheden.IsSet() {
		toSerialize["bijzonderheden"] = o.Bijzonderheden.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAansluitingRequest struct {
	value *AansluitingRequest
	isSet bool
}

func (v NullableAansluitingRequest) Get() *AansluitingRequest {
	return v.value
}

func (v *NullableAansluitingRequest) Set(val *AansluitingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAansluitingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAansluitingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAansluitingRequest(val *AansluitingRequest) *NullableAansluitingRequest {
	return &NullableAansluitingRequest{value: val, isSet: true}
}

func (v NullableAansluitingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAansluitingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


