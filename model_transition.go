/*
AMSVR Broker API

# Introductie     Voor u heeft u de online documentatie van de AMSVR Broker API. Omdat het een Nederlands domein      betreft worden er Engelse en Nederlandse terminologie door elkaar heen gebruikt.  Liefhebbers van de Swagger UI kunnen [hier terecht](/swagger-ui). Daarnaast is de API eveneens beschikbaar in de op endpoint niveau zoals bijvoorbeeld [hier](/api/aansluitingen).  ##        

API version: release-0.6.14
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package broker

import (
	"encoding/json"
)

// Transition struct for Transition
type Transition struct {
	Transition string `json:"transition"`
	Label string `json:"label"`
}

// NewTransition instantiates a new Transition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransition(transition string, label string) *Transition {
	this := Transition{}
	this.Transition = transition
	this.Label = label
	return &this
}

// NewTransitionWithDefaults instantiates a new Transition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransitionWithDefaults() *Transition {
	this := Transition{}
	return &this
}

// GetTransition returns the Transition field value
func (o *Transition) GetTransition() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Transition
}

// GetTransitionOk returns a tuple with the Transition field value
// and a boolean to check if the value has been set.
func (o *Transition) GetTransitionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Transition, true
}

// SetTransition sets field value
func (o *Transition) SetTransition(v string) {
	o.Transition = v
}

// GetLabel returns the Label field value
func (o *Transition) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *Transition) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *Transition) SetLabel(v string) {
	o.Label = v
}

func (o Transition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["transition"] = o.Transition
	}
	if true {
		toSerialize["label"] = o.Label
	}
	return json.Marshal(toSerialize)
}

type NullableTransition struct {
	value *Transition
	isSet bool
}

func (v NullableTransition) Get() *Transition {
	return v.value
}

func (v *NullableTransition) Set(val *Transition) {
	v.value = val
	v.isSet = true
}

func (v NullableTransition) IsSet() bool {
	return v.isSet
}

func (v *NullableTransition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransition(val *Transition) *NullableTransition {
	return &NullableTransition{value: val, isSet: true}
}

func (v NullableTransition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


