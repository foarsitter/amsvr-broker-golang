/*
AMSVR Broker API

# Introductie     Voor u heeft u de online documentatie van de AMSVR Broker API. Omdat het een Nederlands domein      betreft worden er Engelse en Nederlandse terminologie door elkaar heen gebruikt.  Liefhebbers van de Swagger UI kunnen [hier terecht](/swagger-ui). Daarnaast is de API eveneens beschikbaar in de op endpoint niveau zoals bijvoorbeeld [hier](/api/aansluitingen).  ##        

API version: release-0.6.14
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package broker

import (
	"encoding/json"
)

// AfsluitingZaakRequest struct for AfsluitingZaakRequest
type AfsluitingZaakRequest struct {
	Aansluiting int32 `json:"aansluiting"`
	Reden string `json:"reden"`
	RedenVanAfwijzing NullableString `json:"reden_van_afwijzing,omitempty"`
	// Voor wanneer staat de afsluiting gepland?
	GeplandeDatum string `json:"geplande_datum"`
}

// NewAfsluitingZaakRequest instantiates a new AfsluitingZaakRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAfsluitingZaakRequest(aansluiting int32, reden string, geplandeDatum string) *AfsluitingZaakRequest {
	this := AfsluitingZaakRequest{}
	this.Aansluiting = aansluiting
	this.Reden = reden
	this.GeplandeDatum = geplandeDatum
	return &this
}

// NewAfsluitingZaakRequestWithDefaults instantiates a new AfsluitingZaakRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAfsluitingZaakRequestWithDefaults() *AfsluitingZaakRequest {
	this := AfsluitingZaakRequest{}
	return &this
}

// GetAansluiting returns the Aansluiting field value
func (o *AfsluitingZaakRequest) GetAansluiting() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Aansluiting
}

// GetAansluitingOk returns a tuple with the Aansluiting field value
// and a boolean to check if the value has been set.
func (o *AfsluitingZaakRequest) GetAansluitingOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Aansluiting, true
}

// SetAansluiting sets field value
func (o *AfsluitingZaakRequest) SetAansluiting(v int32) {
	o.Aansluiting = v
}

// GetReden returns the Reden field value
func (o *AfsluitingZaakRequest) GetReden() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reden
}

// GetRedenOk returns a tuple with the Reden field value
// and a boolean to check if the value has been set.
func (o *AfsluitingZaakRequest) GetRedenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reden, true
}

// SetReden sets field value
func (o *AfsluitingZaakRequest) SetReden(v string) {
	o.Reden = v
}

// GetRedenVanAfwijzing returns the RedenVanAfwijzing field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AfsluitingZaakRequest) GetRedenVanAfwijzing() string {
	if o == nil || o.RedenVanAfwijzing.Get() == nil {
		var ret string
		return ret
	}
	return *o.RedenVanAfwijzing.Get()
}

// GetRedenVanAfwijzingOk returns a tuple with the RedenVanAfwijzing field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AfsluitingZaakRequest) GetRedenVanAfwijzingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RedenVanAfwijzing.Get(), o.RedenVanAfwijzing.IsSet()
}

// HasRedenVanAfwijzing returns a boolean if a field has been set.
func (o *AfsluitingZaakRequest) HasRedenVanAfwijzing() bool {
	if o != nil && o.RedenVanAfwijzing.IsSet() {
		return true
	}

	return false
}

// SetRedenVanAfwijzing gets a reference to the given NullableString and assigns it to the RedenVanAfwijzing field.
func (o *AfsluitingZaakRequest) SetRedenVanAfwijzing(v string) {
	o.RedenVanAfwijzing.Set(&v)
}
// SetRedenVanAfwijzingNil sets the value for RedenVanAfwijzing to be an explicit nil
func (o *AfsluitingZaakRequest) SetRedenVanAfwijzingNil() {
	o.RedenVanAfwijzing.Set(nil)
}

// UnsetRedenVanAfwijzing ensures that no value is present for RedenVanAfwijzing, not even an explicit nil
func (o *AfsluitingZaakRequest) UnsetRedenVanAfwijzing() {
	o.RedenVanAfwijzing.Unset()
}

// GetGeplandeDatum returns the GeplandeDatum field value
func (o *AfsluitingZaakRequest) GetGeplandeDatum() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GeplandeDatum
}

// GetGeplandeDatumOk returns a tuple with the GeplandeDatum field value
// and a boolean to check if the value has been set.
func (o *AfsluitingZaakRequest) GetGeplandeDatumOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GeplandeDatum, true
}

// SetGeplandeDatum sets field value
func (o *AfsluitingZaakRequest) SetGeplandeDatum(v string) {
	o.GeplandeDatum = v
}

func (o AfsluitingZaakRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["aansluiting"] = o.Aansluiting
	}
	if true {
		toSerialize["reden"] = o.Reden
	}
	if o.RedenVanAfwijzing.IsSet() {
		toSerialize["reden_van_afwijzing"] = o.RedenVanAfwijzing.Get()
	}
	if true {
		toSerialize["geplande_datum"] = o.GeplandeDatum
	}
	return json.Marshal(toSerialize)
}

type NullableAfsluitingZaakRequest struct {
	value *AfsluitingZaakRequest
	isSet bool
}

func (v NullableAfsluitingZaakRequest) Get() *AfsluitingZaakRequest {
	return v.value
}

func (v *NullableAfsluitingZaakRequest) Set(val *AfsluitingZaakRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAfsluitingZaakRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAfsluitingZaakRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAfsluitingZaakRequest(val *AfsluitingZaakRequest) *NullableAfsluitingZaakRequest {
	return &NullableAfsluitingZaakRequest{value: val, isSet: true}
}

func (v NullableAfsluitingZaakRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAfsluitingZaakRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


