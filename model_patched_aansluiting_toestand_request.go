/*
AMSVR Broker API

# Introductie     Voor u heeft u de online documentatie van de AMSVR Broker API. Omdat het een Nederlands domein      betreft worden er Engelse en Nederlandse terminologie door elkaar heen gebruikt.  Liefhebbers van de Swagger UI kunnen [hier terecht](/swagger-ui). Daarnaast is de API eveneens beschikbaar in de op endpoint niveau zoals bijvoorbeeld [hier](/api/aansluitingen).  ##        

API version: release-0.6.14
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package broker

import (
	"encoding/json"
)

// PatchedAansluitingToestandRequest struct for PatchedAansluitingToestandRequest
type PatchedAansluitingToestandRequest struct {
	// 0 = Passief, 1 = Actief
	Toestand NullableMeldingStatus `json:"toestand,omitempty"`
}

// NewPatchedAansluitingToestandRequest instantiates a new PatchedAansluitingToestandRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedAansluitingToestandRequest() *PatchedAansluitingToestandRequest {
	this := PatchedAansluitingToestandRequest{}
	return &this
}

// NewPatchedAansluitingToestandRequestWithDefaults instantiates a new PatchedAansluitingToestandRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedAansluitingToestandRequestWithDefaults() *PatchedAansluitingToestandRequest {
	this := PatchedAansluitingToestandRequest{}
	return &this
}

// GetToestand returns the Toestand field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedAansluitingToestandRequest) GetToestand() MeldingStatus {
	if o == nil || o.Toestand.Get() == nil {
		var ret MeldingStatus
		return ret
	}
	return *o.Toestand.Get()
}

// GetToestandOk returns a tuple with the Toestand field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedAansluitingToestandRequest) GetToestandOk() (*MeldingStatus, bool) {
	if o == nil {
		return nil, false
	}
	return o.Toestand.Get(), o.Toestand.IsSet()
}

// HasToestand returns a boolean if a field has been set.
func (o *PatchedAansluitingToestandRequest) HasToestand() bool {
	if o != nil && o.Toestand.IsSet() {
		return true
	}

	return false
}

// SetToestand gets a reference to the given NullableMeldingStatus and assigns it to the Toestand field.
func (o *PatchedAansluitingToestandRequest) SetToestand(v MeldingStatus) {
	o.Toestand.Set(&v)
}
// SetToestandNil sets the value for Toestand to be an explicit nil
func (o *PatchedAansluitingToestandRequest) SetToestandNil() {
	o.Toestand.Set(nil)
}

// UnsetToestand ensures that no value is present for Toestand, not even an explicit nil
func (o *PatchedAansluitingToestandRequest) UnsetToestand() {
	o.Toestand.Unset()
}

func (o PatchedAansluitingToestandRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Toestand.IsSet() {
		toSerialize["toestand"] = o.Toestand.Get()
	}
	return json.Marshal(toSerialize)
}

type NullablePatchedAansluitingToestandRequest struct {
	value *PatchedAansluitingToestandRequest
	isSet bool
}

func (v NullablePatchedAansluitingToestandRequest) Get() *PatchedAansluitingToestandRequest {
	return v.value
}

func (v *NullablePatchedAansluitingToestandRequest) Set(val *PatchedAansluitingToestandRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedAansluitingToestandRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedAansluitingToestandRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedAansluitingToestandRequest(val *PatchedAansluitingToestandRequest) *NullablePatchedAansluitingToestandRequest {
	return &NullablePatchedAansluitingToestandRequest{value: val, isSet: true}
}

func (v NullablePatchedAansluitingToestandRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedAansluitingToestandRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


