/*
AMSVR Broker API

# Introductie     Voor u heeft u de online documentatie van de AMSVR Broker API. Omdat het een Nederlands domein      betreft worden er Engelse en Nederlandse terminologie door elkaar heen gebruikt.  Liefhebbers van de Swagger UI kunnen [hier terecht](/swagger-ui). Daarnaast is de API eveneens beschikbaar in de op endpoint niveau zoals bijvoorbeeld [hier](/api/aansluitingen).  ##        

API version: release-0.6.14
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package broker

import (
	"encoding/json"
	"time"
)

// NieuweAansluitingZaakLiveTest struct for NieuweAansluitingZaakLiveTest
type NieuweAansluitingZaakLiveTest struct {
	Description NullableString `json:"description,omitempty"`
	AfspraakTijd *time.Time `json:"afspraak_tijd,omitempty"`
}

// NewNieuweAansluitingZaakLiveTest instantiates a new NieuweAansluitingZaakLiveTest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNieuweAansluitingZaakLiveTest() *NieuweAansluitingZaakLiveTest {
	this := NieuweAansluitingZaakLiveTest{}
	return &this
}

// NewNieuweAansluitingZaakLiveTestWithDefaults instantiates a new NieuweAansluitingZaakLiveTest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNieuweAansluitingZaakLiveTestWithDefaults() *NieuweAansluitingZaakLiveTest {
	this := NieuweAansluitingZaakLiveTest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NieuweAansluitingZaakLiveTest) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NieuweAansluitingZaakLiveTest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *NieuweAansluitingZaakLiveTest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *NieuweAansluitingZaakLiveTest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *NieuweAansluitingZaakLiveTest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *NieuweAansluitingZaakLiveTest) UnsetDescription() {
	o.Description.Unset()
}

// GetAfspraakTijd returns the AfspraakTijd field value if set, zero value otherwise.
func (o *NieuweAansluitingZaakLiveTest) GetAfspraakTijd() time.Time {
	if o == nil || o.AfspraakTijd == nil {
		var ret time.Time
		return ret
	}
	return *o.AfspraakTijd
}

// GetAfspraakTijdOk returns a tuple with the AfspraakTijd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NieuweAansluitingZaakLiveTest) GetAfspraakTijdOk() (*time.Time, bool) {
	if o == nil || o.AfspraakTijd == nil {
		return nil, false
	}
	return o.AfspraakTijd, true
}

// HasAfspraakTijd returns a boolean if a field has been set.
func (o *NieuweAansluitingZaakLiveTest) HasAfspraakTijd() bool {
	if o != nil && o.AfspraakTijd != nil {
		return true
	}

	return false
}

// SetAfspraakTijd gets a reference to the given time.Time and assigns it to the AfspraakTijd field.
func (o *NieuweAansluitingZaakLiveTest) SetAfspraakTijd(v time.Time) {
	o.AfspraakTijd = &v
}

func (o NieuweAansluitingZaakLiveTest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.AfspraakTijd != nil {
		toSerialize["afspraak_tijd"] = o.AfspraakTijd
	}
	return json.Marshal(toSerialize)
}

type NullableNieuweAansluitingZaakLiveTest struct {
	value *NieuweAansluitingZaakLiveTest
	isSet bool
}

func (v NullableNieuweAansluitingZaakLiveTest) Get() *NieuweAansluitingZaakLiveTest {
	return v.value
}

func (v *NullableNieuweAansluitingZaakLiveTest) Set(val *NieuweAansluitingZaakLiveTest) {
	v.value = val
	v.isSet = true
}

func (v NullableNieuweAansluitingZaakLiveTest) IsSet() bool {
	return v.isSet
}

func (v *NullableNieuweAansluitingZaakLiveTest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNieuweAansluitingZaakLiveTest(val *NieuweAansluitingZaakLiveTest) *NullableNieuweAansluitingZaakLiveTest {
	return &NullableNieuweAansluitingZaakLiveTest{value: val, isSet: true}
}

func (v NullableNieuweAansluitingZaakLiveTest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNieuweAansluitingZaakLiveTest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


