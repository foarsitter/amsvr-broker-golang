/*
AMSVR Broker API

# Introductie     Voor u heeft u de online documentatie van de AMSVR Broker API. Omdat het een Nederlands domein      betreft worden er Engelse en Nederlandse terminologie door elkaar heen gebruikt.  Liefhebbers van de Swagger UI kunnen [hier terecht](/swagger-ui). Daarnaast is de API eveneens beschikbaar in de op endpoint niveau zoals bijvoorbeeld [hier](/api/aansluitingen).  ##        

API version: release-0.6.14
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package broker

import (
	"encoding/json"
	"time"
)

// MeldingRequest struct for MeldingRequest
type MeldingRequest struct {
	// The naam field of the Criterium
	Criterium int32 `json:"criterium"`
	Tijd time.Time `json:"tijd"`
	// Reference to the number of the sector
	Sector NullableInt32 `json:"sector,omitempty"`
	// 0 = Rust, 1 = Alarm
	Status NullableMeldingStatus `json:"status,omitempty"`
	// 0 = Actief, 1 = Test, 2 = Passief
	Toestand NullableMeldingToestand `json:"toestand"`
	Data *string `json:"data,omitempty"`
	Actueel *bool `json:"actueel,omitempty"`
	GmsId NullableString `json:"gms_id,omitempty"`
	Oorzaak NullableString `json:"oorzaak,omitempty"`
	FepNr int32 `json:"fep_nr"`
	VolgNr int32 `json:"volg_nr"`
	MeldingId NullableString `json:"melding_id,omitempty"`
	Prio NullablePrioEnum `json:"prio,omitempty"`
}

// NewMeldingRequest instantiates a new MeldingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMeldingRequest(criterium int32, tijd time.Time, toestand NullableMeldingToestand, fepNr int32, volgNr int32) *MeldingRequest {
	this := MeldingRequest{}
	this.Criterium = criterium
	this.Tijd = tijd
	this.Toestand = toestand
	this.FepNr = fepNr
	this.VolgNr = volgNr
	return &this
}

// NewMeldingRequestWithDefaults instantiates a new MeldingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMeldingRequestWithDefaults() *MeldingRequest {
	this := MeldingRequest{}
	return &this
}

// GetCriterium returns the Criterium field value
func (o *MeldingRequest) GetCriterium() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Criterium
}

// GetCriteriumOk returns a tuple with the Criterium field value
// and a boolean to check if the value has been set.
func (o *MeldingRequest) GetCriteriumOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Criterium, true
}

// SetCriterium sets field value
func (o *MeldingRequest) SetCriterium(v int32) {
	o.Criterium = v
}

// GetTijd returns the Tijd field value
func (o *MeldingRequest) GetTijd() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Tijd
}

// GetTijdOk returns a tuple with the Tijd field value
// and a boolean to check if the value has been set.
func (o *MeldingRequest) GetTijdOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tijd, true
}

// SetTijd sets field value
func (o *MeldingRequest) SetTijd(v time.Time) {
	o.Tijd = v
}

// GetSector returns the Sector field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MeldingRequest) GetSector() int32 {
	if o == nil || o.Sector.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Sector.Get()
}

// GetSectorOk returns a tuple with the Sector field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MeldingRequest) GetSectorOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sector.Get(), o.Sector.IsSet()
}

// HasSector returns a boolean if a field has been set.
func (o *MeldingRequest) HasSector() bool {
	if o != nil && o.Sector.IsSet() {
		return true
	}

	return false
}

// SetSector gets a reference to the given NullableInt32 and assigns it to the Sector field.
func (o *MeldingRequest) SetSector(v int32) {
	o.Sector.Set(&v)
}
// SetSectorNil sets the value for Sector to be an explicit nil
func (o *MeldingRequest) SetSectorNil() {
	o.Sector.Set(nil)
}

// UnsetSector ensures that no value is present for Sector, not even an explicit nil
func (o *MeldingRequest) UnsetSector() {
	o.Sector.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MeldingRequest) GetStatus() MeldingStatus {
	if o == nil || o.Status.Get() == nil {
		var ret MeldingStatus
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MeldingRequest) GetStatusOk() (*MeldingStatus, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *MeldingRequest) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableMeldingStatus and assigns it to the Status field.
func (o *MeldingRequest) SetStatus(v MeldingStatus) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *MeldingRequest) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *MeldingRequest) UnsetStatus() {
	o.Status.Unset()
}

// GetToestand returns the Toestand field value
// If the value is explicit nil, the zero value for MeldingToestand will be returned
func (o *MeldingRequest) GetToestand() MeldingToestand {
	if o == nil || o.Toestand.Get() == nil {
		var ret MeldingToestand
		return ret
	}

	return *o.Toestand.Get()
}

// GetToestandOk returns a tuple with the Toestand field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MeldingRequest) GetToestandOk() (*MeldingToestand, bool) {
	if o == nil {
		return nil, false
	}
	return o.Toestand.Get(), o.Toestand.IsSet()
}

// SetToestand sets field value
func (o *MeldingRequest) SetToestand(v MeldingToestand) {
	o.Toestand.Set(&v)
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *MeldingRequest) GetData() string {
	if o == nil || o.Data == nil {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeldingRequest) GetDataOk() (*string, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *MeldingRequest) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *MeldingRequest) SetData(v string) {
	o.Data = &v
}

// GetActueel returns the Actueel field value if set, zero value otherwise.
func (o *MeldingRequest) GetActueel() bool {
	if o == nil || o.Actueel == nil {
		var ret bool
		return ret
	}
	return *o.Actueel
}

// GetActueelOk returns a tuple with the Actueel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeldingRequest) GetActueelOk() (*bool, bool) {
	if o == nil || o.Actueel == nil {
		return nil, false
	}
	return o.Actueel, true
}

// HasActueel returns a boolean if a field has been set.
func (o *MeldingRequest) HasActueel() bool {
	if o != nil && o.Actueel != nil {
		return true
	}

	return false
}

// SetActueel gets a reference to the given bool and assigns it to the Actueel field.
func (o *MeldingRequest) SetActueel(v bool) {
	o.Actueel = &v
}

// GetGmsId returns the GmsId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MeldingRequest) GetGmsId() string {
	if o == nil || o.GmsId.Get() == nil {
		var ret string
		return ret
	}
	return *o.GmsId.Get()
}

// GetGmsIdOk returns a tuple with the GmsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MeldingRequest) GetGmsIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GmsId.Get(), o.GmsId.IsSet()
}

// HasGmsId returns a boolean if a field has been set.
func (o *MeldingRequest) HasGmsId() bool {
	if o != nil && o.GmsId.IsSet() {
		return true
	}

	return false
}

// SetGmsId gets a reference to the given NullableString and assigns it to the GmsId field.
func (o *MeldingRequest) SetGmsId(v string) {
	o.GmsId.Set(&v)
}
// SetGmsIdNil sets the value for GmsId to be an explicit nil
func (o *MeldingRequest) SetGmsIdNil() {
	o.GmsId.Set(nil)
}

// UnsetGmsId ensures that no value is present for GmsId, not even an explicit nil
func (o *MeldingRequest) UnsetGmsId() {
	o.GmsId.Unset()
}

// GetOorzaak returns the Oorzaak field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MeldingRequest) GetOorzaak() string {
	if o == nil || o.Oorzaak.Get() == nil {
		var ret string
		return ret
	}
	return *o.Oorzaak.Get()
}

// GetOorzaakOk returns a tuple with the Oorzaak field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MeldingRequest) GetOorzaakOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Oorzaak.Get(), o.Oorzaak.IsSet()
}

// HasOorzaak returns a boolean if a field has been set.
func (o *MeldingRequest) HasOorzaak() bool {
	if o != nil && o.Oorzaak.IsSet() {
		return true
	}

	return false
}

// SetOorzaak gets a reference to the given NullableString and assigns it to the Oorzaak field.
func (o *MeldingRequest) SetOorzaak(v string) {
	o.Oorzaak.Set(&v)
}
// SetOorzaakNil sets the value for Oorzaak to be an explicit nil
func (o *MeldingRequest) SetOorzaakNil() {
	o.Oorzaak.Set(nil)
}

// UnsetOorzaak ensures that no value is present for Oorzaak, not even an explicit nil
func (o *MeldingRequest) UnsetOorzaak() {
	o.Oorzaak.Unset()
}

// GetFepNr returns the FepNr field value
func (o *MeldingRequest) GetFepNr() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FepNr
}

// GetFepNrOk returns a tuple with the FepNr field value
// and a boolean to check if the value has been set.
func (o *MeldingRequest) GetFepNrOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FepNr, true
}

// SetFepNr sets field value
func (o *MeldingRequest) SetFepNr(v int32) {
	o.FepNr = v
}

// GetVolgNr returns the VolgNr field value
func (o *MeldingRequest) GetVolgNr() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VolgNr
}

// GetVolgNrOk returns a tuple with the VolgNr field value
// and a boolean to check if the value has been set.
func (o *MeldingRequest) GetVolgNrOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VolgNr, true
}

// SetVolgNr sets field value
func (o *MeldingRequest) SetVolgNr(v int32) {
	o.VolgNr = v
}

// GetMeldingId returns the MeldingId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MeldingRequest) GetMeldingId() string {
	if o == nil || o.MeldingId.Get() == nil {
		var ret string
		return ret
	}
	return *o.MeldingId.Get()
}

// GetMeldingIdOk returns a tuple with the MeldingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MeldingRequest) GetMeldingIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MeldingId.Get(), o.MeldingId.IsSet()
}

// HasMeldingId returns a boolean if a field has been set.
func (o *MeldingRequest) HasMeldingId() bool {
	if o != nil && o.MeldingId.IsSet() {
		return true
	}

	return false
}

// SetMeldingId gets a reference to the given NullableString and assigns it to the MeldingId field.
func (o *MeldingRequest) SetMeldingId(v string) {
	o.MeldingId.Set(&v)
}
// SetMeldingIdNil sets the value for MeldingId to be an explicit nil
func (o *MeldingRequest) SetMeldingIdNil() {
	o.MeldingId.Set(nil)
}

// UnsetMeldingId ensures that no value is present for MeldingId, not even an explicit nil
func (o *MeldingRequest) UnsetMeldingId() {
	o.MeldingId.Unset()
}

// GetPrio returns the Prio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MeldingRequest) GetPrio() PrioEnum {
	if o == nil || o.Prio.Get() == nil {
		var ret PrioEnum
		return ret
	}
	return *o.Prio.Get()
}

// GetPrioOk returns a tuple with the Prio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MeldingRequest) GetPrioOk() (*PrioEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.Prio.Get(), o.Prio.IsSet()
}

// HasPrio returns a boolean if a field has been set.
func (o *MeldingRequest) HasPrio() bool {
	if o != nil && o.Prio.IsSet() {
		return true
	}

	return false
}

// SetPrio gets a reference to the given NullablePrioEnum and assigns it to the Prio field.
func (o *MeldingRequest) SetPrio(v PrioEnum) {
	o.Prio.Set(&v)
}
// SetPrioNil sets the value for Prio to be an explicit nil
func (o *MeldingRequest) SetPrioNil() {
	o.Prio.Set(nil)
}

// UnsetPrio ensures that no value is present for Prio, not even an explicit nil
func (o *MeldingRequest) UnsetPrio() {
	o.Prio.Unset()
}

func (o MeldingRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["criterium"] = o.Criterium
	}
	if true {
		toSerialize["tijd"] = o.Tijd
	}
	if o.Sector.IsSet() {
		toSerialize["sector"] = o.Sector.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if true {
		toSerialize["toestand"] = o.Toestand.Get()
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Actueel != nil {
		toSerialize["actueel"] = o.Actueel
	}
	if o.GmsId.IsSet() {
		toSerialize["gms_id"] = o.GmsId.Get()
	}
	if o.Oorzaak.IsSet() {
		toSerialize["oorzaak"] = o.Oorzaak.Get()
	}
	if true {
		toSerialize["fep_nr"] = o.FepNr
	}
	if true {
		toSerialize["volg_nr"] = o.VolgNr
	}
	if o.MeldingId.IsSet() {
		toSerialize["melding_id"] = o.MeldingId.Get()
	}
	if o.Prio.IsSet() {
		toSerialize["prio"] = o.Prio.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMeldingRequest struct {
	value *MeldingRequest
	isSet bool
}

func (v NullableMeldingRequest) Get() *MeldingRequest {
	return v.value
}

func (v *NullableMeldingRequest) Set(val *MeldingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMeldingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMeldingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMeldingRequest(val *MeldingRequest) *NullableMeldingRequest {
	return &NullableMeldingRequest{value: val, isSet: true}
}

func (v NullableMeldingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMeldingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


