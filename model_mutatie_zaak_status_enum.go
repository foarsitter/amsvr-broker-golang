/*
AMSVR Broker API

# Introductie     Voor u heeft u de online documentatie van de AMSVR Broker API. Omdat het een Nederlands domein      betreft worden er Engelse en Nederlandse terminologie door elkaar heen gebruikt.  Liefhebbers van de Swagger UI kunnen [hier terecht](/swagger-ui). Daarnaast is de API eveneens beschikbaar in de op endpoint niveau zoals bijvoorbeeld [hier](/api/aansluitingen).  ##        

API version: release-0.6.14
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package broker

import (
	"encoding/json"
	"fmt"
)

// MutatieZaakStatusEnum the model 'MutatieZaakStatusEnum'
type MutatieZaakStatusEnum string

// List of MutatieZaakStatusEnum
const (
	MUTATIEZAAKSTATUSENUM_MUTATIE MutatieZaakStatusEnum = "mutatie"
	MUTATIEZAAKSTATUSENUM_INGEDIEND MutatieZaakStatusEnum = "ingediend"
	MUTATIEZAAKSTATUSENUM_AFGEWEZEN MutatieZaakStatusEnum = "afgewezen"
	MUTATIEZAAKSTATUSENUM_GOEDGEKEURD MutatieZaakStatusEnum = "goedgekeurd"
	MUTATIEZAAKSTATUSENUM_AANGEPAST_BROKER MutatieZaakStatusEnum = "aangepast_broker"
	MUTATIEZAAKSTATUSENUM_GMS_TOEGEVOEGD MutatieZaakStatusEnum = "gms_toegevoegd"
	MUTATIEZAAKSTATUSENUM_INGEPLAND MutatieZaakStatusEnum = "ingepland"
	MUTATIEZAAKSTATUSENUM_AANPASSINGEN_GEVERIFIEERD MutatieZaakStatusEnum = "aanpassingen_geverifieerd"
	MUTATIEZAAKSTATUSENUM_GMS_VERWIJDERD MutatieZaakStatusEnum = "gms_verwijderd"
	MUTATIEZAAKSTATUSENUM_GEANNULEERD MutatieZaakStatusEnum = "geannuleerd"
)

// All allowed values of MutatieZaakStatusEnum enum
var AllowedMutatieZaakStatusEnumEnumValues = []MutatieZaakStatusEnum{
	"mutatie",
	"ingediend",
	"afgewezen",
	"goedgekeurd",
	"aangepast_broker",
	"gms_toegevoegd",
	"ingepland",
	"aanpassingen_geverifieerd",
	"gms_verwijderd",
	"geannuleerd",
}

func (v *MutatieZaakStatusEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MutatieZaakStatusEnum(value)
	for _, existing := range AllowedMutatieZaakStatusEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MutatieZaakStatusEnum", value)
}

// NewMutatieZaakStatusEnumFromValue returns a pointer to a valid MutatieZaakStatusEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMutatieZaakStatusEnumFromValue(v string) (*MutatieZaakStatusEnum, error) {
	ev := MutatieZaakStatusEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MutatieZaakStatusEnum: valid values are %v", v, AllowedMutatieZaakStatusEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MutatieZaakStatusEnum) IsValid() bool {
	for _, existing := range AllowedMutatieZaakStatusEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MutatieZaakStatusEnum value
func (v MutatieZaakStatusEnum) Ptr() *MutatieZaakStatusEnum {
	return &v
}

type NullableMutatieZaakStatusEnum struct {
	value *MutatieZaakStatusEnum
	isSet bool
}

func (v NullableMutatieZaakStatusEnum) Get() *MutatieZaakStatusEnum {
	return v.value
}

func (v *NullableMutatieZaakStatusEnum) Set(val *MutatieZaakStatusEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableMutatieZaakStatusEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableMutatieZaakStatusEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMutatieZaakStatusEnum(val *MutatieZaakStatusEnum) *NullableMutatieZaakStatusEnum {
	return &NullableMutatieZaakStatusEnum{value: val, isSet: true}
}

func (v NullableMutatieZaakStatusEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMutatieZaakStatusEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

