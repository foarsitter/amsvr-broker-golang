/*
AMSVR Broker API

# Introductie     Voor u heeft u de online documentatie van de AMSVR Broker API. Omdat het een Nederlands domein      betreft worden er Engelse en Nederlandse terminologie door elkaar heen gebruikt.  Liefhebbers van de Swagger UI kunnen [hier terecht](/swagger-ui). Daarnaast is de API eveneens beschikbaar in de op endpoint niveau zoals bijvoorbeeld [hier](/api/aansluitingen).  ##        

API version: release-0.6.14
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package broker

import (
	"encoding/json"
)

// Bookabledays struct for Bookabledays
type Bookabledays struct {
	Days []string `json:"days"`
}

// NewBookabledays instantiates a new Bookabledays object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookabledays(days []string) *Bookabledays {
	this := Bookabledays{}
	this.Days = days
	return &this
}

// NewBookabledaysWithDefaults instantiates a new Bookabledays object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookabledaysWithDefaults() *Bookabledays {
	this := Bookabledays{}
	return &this
}

// GetDays returns the Days field value
func (o *Bookabledays) GetDays() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Days
}

// GetDaysOk returns a tuple with the Days field value
// and a boolean to check if the value has been set.
func (o *Bookabledays) GetDaysOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Days, true
}

// SetDays sets field value
func (o *Bookabledays) SetDays(v []string) {
	o.Days = v
}

func (o Bookabledays) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["days"] = o.Days
	}
	return json.Marshal(toSerialize)
}

type NullableBookabledays struct {
	value *Bookabledays
	isSet bool
}

func (v NullableBookabledays) Get() *Bookabledays {
	return v.value
}

func (v *NullableBookabledays) Set(val *Bookabledays) {
	v.value = val
	v.isSet = true
}

func (v NullableBookabledays) IsSet() bool {
	return v.isSet
}

func (v *NullableBookabledays) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookabledays(val *Bookabledays) *NullableBookabledays {
	return &NullableBookabledays{value: val, isSet: true}
}

func (v NullableBookabledays) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookabledays) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


