/*
AMSVR Broker API

# Introductie     Voor u heeft u de online documentatie van de AMSVR Broker API. Omdat het een Nederlands domein      betreft worden er Engelse en Nederlandse terminologie door elkaar heen gebruikt.  Liefhebbers van de Swagger UI kunnen [hier terecht](/swagger-ui). Daarnaast is de API eveneens beschikbaar in de op endpoint niveau zoals bijvoorbeeld [hier](/api/aansluitingen).  ##        

API version: release-0.6.14
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package broker

import (
	"encoding/json"
)

// BookableTimes struct for BookableTimes
type BookableTimes struct {
	Date string `json:"date"`
	StartTime string `json:"start_time"`
	EndTime string `json:"end_time"`
	Timestamp int32 `json:"timestamp"`
}

// NewBookableTimes instantiates a new BookableTimes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookableTimes(date string, startTime string, endTime string, timestamp int32) *BookableTimes {
	this := BookableTimes{}
	this.Date = date
	this.StartTime = startTime
	this.EndTime = endTime
	this.Timestamp = timestamp
	return &this
}

// NewBookableTimesWithDefaults instantiates a new BookableTimes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookableTimesWithDefaults() *BookableTimes {
	this := BookableTimes{}
	return &this
}

// GetDate returns the Date field value
func (o *BookableTimes) GetDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *BookableTimes) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *BookableTimes) SetDate(v string) {
	o.Date = v
}

// GetStartTime returns the StartTime field value
func (o *BookableTimes) GetStartTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *BookableTimes) GetStartTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *BookableTimes) SetStartTime(v string) {
	o.StartTime = v
}

// GetEndTime returns the EndTime field value
func (o *BookableTimes) GetEndTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value
// and a boolean to check if the value has been set.
func (o *BookableTimes) GetEndTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndTime, true
}

// SetEndTime sets field value
func (o *BookableTimes) SetEndTime(v string) {
	o.EndTime = v
}

// GetTimestamp returns the Timestamp field value
func (o *BookableTimes) GetTimestamp() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *BookableTimes) GetTimestampOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *BookableTimes) SetTimestamp(v int32) {
	o.Timestamp = v
}

func (o BookableTimes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["date"] = o.Date
	}
	if true {
		toSerialize["start_time"] = o.StartTime
	}
	if true {
		toSerialize["end_time"] = o.EndTime
	}
	if true {
		toSerialize["timestamp"] = o.Timestamp
	}
	return json.Marshal(toSerialize)
}

type NullableBookableTimes struct {
	value *BookableTimes
	isSet bool
}

func (v NullableBookableTimes) Get() *BookableTimes {
	return v.value
}

func (v *NullableBookableTimes) Set(val *BookableTimes) {
	v.value = val
	v.isSet = true
}

func (v NullableBookableTimes) IsSet() bool {
	return v.isSet
}

func (v *NullableBookableTimes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookableTimes(val *BookableTimes) *NullableBookableTimes {
	return &NullableBookableTimes{value: val, isSet: true}
}

func (v NullableBookableTimes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookableTimes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


