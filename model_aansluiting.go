/*
AMSVR Broker API

# Introductie     Voor u heeft u de online documentatie van de AMSVR Broker API. Omdat het een Nederlands domein      betreft worden er Engelse en Nederlandse terminologie door elkaar heen gebruikt.  Liefhebbers van de Swagger UI kunnen [hier terecht](/swagger-ui). Daarnaast is de API eveneens beschikbaar in de op endpoint niveau zoals bijvoorbeeld [hier](/api/aansluitingen).  ##        

API version: release-0.6.14
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package broker

import (
	"encoding/json"
	"time"
)

// Aansluiting struct for Aansluiting
type Aansluiting struct {
	Id int32 `json:"id"`
	Naam string `json:"naam"`
	Aansluitnummer string `json:"aansluitnummer"`
	// 0 = Nieuw, 10 = Ingediend ter aanvraag [ATSP], 20 = Aanvraag afgekeurd [Risicobeheer], 30 = Aanvraag goedgekeurd [Risicobeheer], 50 = Live test ingepland [ATSP], 55 = Goedgekeurd [AMS-servicedesk], 60 = Actief gezet [Risicobeheer], 5 = Migratie gestart [ATSP], 61 = Migratie goedgekeurd [AMS-Servicedesk]
	Status NullableAansluitingStatusEnum `json:"status"`
	Atsp int32 `json:"atsp"`
	Gemeente NullableInt32 `json:"gemeente,omitempty"`
	Straat *string `json:"straat,omitempty"`
	Huisnummer *string `json:"huisnummer,omitempty"`
	Huisletter *string `json:"huisletter,omitempty"`
	Toevoeging *string `json:"toevoeging,omitempty"`
	Postcode *string `json:"postcode,omitempty"`
	Plaats *string `json:"plaats,omitempty"`
	Created time.Time `json:"created"`
	Modified time.Time `json:"modified"`
	// 0 = Passief, 1 = Actief
	Toestand NullableMeldingStatus `json:"toestand"`
	BagLookupId *string `json:"bag_lookup_id,omitempty"`
	BagId string `json:"bag_id"`
	BagNietBeschikbaar NullableBool `json:"bag_niet_beschikbaar,omitempty"`
	BagComment *string `json:"bag_comment,omitempty"`
	// https://www.kadaster.nl/zakelijk/registraties/basisregistraties/rijksdriehoeksmeting/rijksdriehoeksstelsel
	RijksdriehoekstelX NullableFloat64 `json:"rijksdriehoekstel_x,omitempty"`
	// https://www.kadaster.nl/zakelijk/registraties/basisregistraties/rijksdriehoeksmeting/rijksdriehoeksstelsel
	RijksdriehoekstelY NullableFloat64 `json:"rijksdriehoekstel_y,omitempty"`
	Gebruiksfunctie NullableGebruiksfunctieEnum `json:"gebruiksfunctie,omitempty"`
	Bijzonderheden NullableString `json:"bijzonderheden,omitempty"`
	Bron NullableBronEnum `json:"bron"`
}

// NewAansluiting instantiates a new Aansluiting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAansluiting(id int32, naam string, aansluitnummer string, status NullableAansluitingStatusEnum, atsp int32, created time.Time, modified time.Time, toestand NullableMeldingStatus, bagId string, bron NullableBronEnum) *Aansluiting {
	this := Aansluiting{}
	this.Id = id
	this.Naam = naam
	this.Aansluitnummer = aansluitnummer
	this.Status = status
	this.Atsp = atsp
	this.Created = created
	this.Modified = modified
	this.Toestand = toestand
	this.BagId = bagId
	this.Bron = bron
	return &this
}

// NewAansluitingWithDefaults instantiates a new Aansluiting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAansluitingWithDefaults() *Aansluiting {
	this := Aansluiting{}
	return &this
}

// GetId returns the Id field value
func (o *Aansluiting) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Aansluiting) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Aansluiting) SetId(v int32) {
	o.Id = v
}

// GetNaam returns the Naam field value
func (o *Aansluiting) GetNaam() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Naam
}

// GetNaamOk returns a tuple with the Naam field value
// and a boolean to check if the value has been set.
func (o *Aansluiting) GetNaamOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Naam, true
}

// SetNaam sets field value
func (o *Aansluiting) SetNaam(v string) {
	o.Naam = v
}

// GetAansluitnummer returns the Aansluitnummer field value
func (o *Aansluiting) GetAansluitnummer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Aansluitnummer
}

// GetAansluitnummerOk returns a tuple with the Aansluitnummer field value
// and a boolean to check if the value has been set.
func (o *Aansluiting) GetAansluitnummerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Aansluitnummer, true
}

// SetAansluitnummer sets field value
func (o *Aansluiting) SetAansluitnummer(v string) {
	o.Aansluitnummer = v
}

// GetStatus returns the Status field value
// If the value is explicit nil, the zero value for AansluitingStatusEnum will be returned
func (o *Aansluiting) GetStatus() AansluitingStatusEnum {
	if o == nil || o.Status.Get() == nil {
		var ret AansluitingStatusEnum
		return ret
	}

	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Aansluiting) GetStatusOk() (*AansluitingStatusEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// SetStatus sets field value
func (o *Aansluiting) SetStatus(v AansluitingStatusEnum) {
	o.Status.Set(&v)
}

// GetAtsp returns the Atsp field value
func (o *Aansluiting) GetAtsp() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Atsp
}

// GetAtspOk returns a tuple with the Atsp field value
// and a boolean to check if the value has been set.
func (o *Aansluiting) GetAtspOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Atsp, true
}

// SetAtsp sets field value
func (o *Aansluiting) SetAtsp(v int32) {
	o.Atsp = v
}

// GetGemeente returns the Gemeente field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Aansluiting) GetGemeente() int32 {
	if o == nil || o.Gemeente.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Gemeente.Get()
}

// GetGemeenteOk returns a tuple with the Gemeente field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Aansluiting) GetGemeenteOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Gemeente.Get(), o.Gemeente.IsSet()
}

// HasGemeente returns a boolean if a field has been set.
func (o *Aansluiting) HasGemeente() bool {
	if o != nil && o.Gemeente.IsSet() {
		return true
	}

	return false
}

// SetGemeente gets a reference to the given NullableInt32 and assigns it to the Gemeente field.
func (o *Aansluiting) SetGemeente(v int32) {
	o.Gemeente.Set(&v)
}
// SetGemeenteNil sets the value for Gemeente to be an explicit nil
func (o *Aansluiting) SetGemeenteNil() {
	o.Gemeente.Set(nil)
}

// UnsetGemeente ensures that no value is present for Gemeente, not even an explicit nil
func (o *Aansluiting) UnsetGemeente() {
	o.Gemeente.Unset()
}

// GetStraat returns the Straat field value if set, zero value otherwise.
func (o *Aansluiting) GetStraat() string {
	if o == nil || o.Straat == nil {
		var ret string
		return ret
	}
	return *o.Straat
}

// GetStraatOk returns a tuple with the Straat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Aansluiting) GetStraatOk() (*string, bool) {
	if o == nil || o.Straat == nil {
		return nil, false
	}
	return o.Straat, true
}

// HasStraat returns a boolean if a field has been set.
func (o *Aansluiting) HasStraat() bool {
	if o != nil && o.Straat != nil {
		return true
	}

	return false
}

// SetStraat gets a reference to the given string and assigns it to the Straat field.
func (o *Aansluiting) SetStraat(v string) {
	o.Straat = &v
}

// GetHuisnummer returns the Huisnummer field value if set, zero value otherwise.
func (o *Aansluiting) GetHuisnummer() string {
	if o == nil || o.Huisnummer == nil {
		var ret string
		return ret
	}
	return *o.Huisnummer
}

// GetHuisnummerOk returns a tuple with the Huisnummer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Aansluiting) GetHuisnummerOk() (*string, bool) {
	if o == nil || o.Huisnummer == nil {
		return nil, false
	}
	return o.Huisnummer, true
}

// HasHuisnummer returns a boolean if a field has been set.
func (o *Aansluiting) HasHuisnummer() bool {
	if o != nil && o.Huisnummer != nil {
		return true
	}

	return false
}

// SetHuisnummer gets a reference to the given string and assigns it to the Huisnummer field.
func (o *Aansluiting) SetHuisnummer(v string) {
	o.Huisnummer = &v
}

// GetHuisletter returns the Huisletter field value if set, zero value otherwise.
func (o *Aansluiting) GetHuisletter() string {
	if o == nil || o.Huisletter == nil {
		var ret string
		return ret
	}
	return *o.Huisletter
}

// GetHuisletterOk returns a tuple with the Huisletter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Aansluiting) GetHuisletterOk() (*string, bool) {
	if o == nil || o.Huisletter == nil {
		return nil, false
	}
	return o.Huisletter, true
}

// HasHuisletter returns a boolean if a field has been set.
func (o *Aansluiting) HasHuisletter() bool {
	if o != nil && o.Huisletter != nil {
		return true
	}

	return false
}

// SetHuisletter gets a reference to the given string and assigns it to the Huisletter field.
func (o *Aansluiting) SetHuisletter(v string) {
	o.Huisletter = &v
}

// GetToevoeging returns the Toevoeging field value if set, zero value otherwise.
func (o *Aansluiting) GetToevoeging() string {
	if o == nil || o.Toevoeging == nil {
		var ret string
		return ret
	}
	return *o.Toevoeging
}

// GetToevoegingOk returns a tuple with the Toevoeging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Aansluiting) GetToevoegingOk() (*string, bool) {
	if o == nil || o.Toevoeging == nil {
		return nil, false
	}
	return o.Toevoeging, true
}

// HasToevoeging returns a boolean if a field has been set.
func (o *Aansluiting) HasToevoeging() bool {
	if o != nil && o.Toevoeging != nil {
		return true
	}

	return false
}

// SetToevoeging gets a reference to the given string and assigns it to the Toevoeging field.
func (o *Aansluiting) SetToevoeging(v string) {
	o.Toevoeging = &v
}

// GetPostcode returns the Postcode field value if set, zero value otherwise.
func (o *Aansluiting) GetPostcode() string {
	if o == nil || o.Postcode == nil {
		var ret string
		return ret
	}
	return *o.Postcode
}

// GetPostcodeOk returns a tuple with the Postcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Aansluiting) GetPostcodeOk() (*string, bool) {
	if o == nil || o.Postcode == nil {
		return nil, false
	}
	return o.Postcode, true
}

// HasPostcode returns a boolean if a field has been set.
func (o *Aansluiting) HasPostcode() bool {
	if o != nil && o.Postcode != nil {
		return true
	}

	return false
}

// SetPostcode gets a reference to the given string and assigns it to the Postcode field.
func (o *Aansluiting) SetPostcode(v string) {
	o.Postcode = &v
}

// GetPlaats returns the Plaats field value if set, zero value otherwise.
func (o *Aansluiting) GetPlaats() string {
	if o == nil || o.Plaats == nil {
		var ret string
		return ret
	}
	return *o.Plaats
}

// GetPlaatsOk returns a tuple with the Plaats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Aansluiting) GetPlaatsOk() (*string, bool) {
	if o == nil || o.Plaats == nil {
		return nil, false
	}
	return o.Plaats, true
}

// HasPlaats returns a boolean if a field has been set.
func (o *Aansluiting) HasPlaats() bool {
	if o != nil && o.Plaats != nil {
		return true
	}

	return false
}

// SetPlaats gets a reference to the given string and assigns it to the Plaats field.
func (o *Aansluiting) SetPlaats(v string) {
	o.Plaats = &v
}

// GetCreated returns the Created field value
func (o *Aansluiting) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *Aansluiting) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *Aansluiting) SetCreated(v time.Time) {
	o.Created = v
}

// GetModified returns the Modified field value
func (o *Aansluiting) GetModified() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value
// and a boolean to check if the value has been set.
func (o *Aansluiting) GetModifiedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Modified, true
}

// SetModified sets field value
func (o *Aansluiting) SetModified(v time.Time) {
	o.Modified = v
}

// GetToestand returns the Toestand field value
// If the value is explicit nil, the zero value for MeldingStatus will be returned
func (o *Aansluiting) GetToestand() MeldingStatus {
	if o == nil || o.Toestand.Get() == nil {
		var ret MeldingStatus
		return ret
	}

	return *o.Toestand.Get()
}

// GetToestandOk returns a tuple with the Toestand field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Aansluiting) GetToestandOk() (*MeldingStatus, bool) {
	if o == nil {
		return nil, false
	}
	return o.Toestand.Get(), o.Toestand.IsSet()
}

// SetToestand sets field value
func (o *Aansluiting) SetToestand(v MeldingStatus) {
	o.Toestand.Set(&v)
}

// GetBagLookupId returns the BagLookupId field value if set, zero value otherwise.
func (o *Aansluiting) GetBagLookupId() string {
	if o == nil || o.BagLookupId == nil {
		var ret string
		return ret
	}
	return *o.BagLookupId
}

// GetBagLookupIdOk returns a tuple with the BagLookupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Aansluiting) GetBagLookupIdOk() (*string, bool) {
	if o == nil || o.BagLookupId == nil {
		return nil, false
	}
	return o.BagLookupId, true
}

// HasBagLookupId returns a boolean if a field has been set.
func (o *Aansluiting) HasBagLookupId() bool {
	if o != nil && o.BagLookupId != nil {
		return true
	}

	return false
}

// SetBagLookupId gets a reference to the given string and assigns it to the BagLookupId field.
func (o *Aansluiting) SetBagLookupId(v string) {
	o.BagLookupId = &v
}

// GetBagId returns the BagId field value
func (o *Aansluiting) GetBagId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BagId
}

// GetBagIdOk returns a tuple with the BagId field value
// and a boolean to check if the value has been set.
func (o *Aansluiting) GetBagIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BagId, true
}

// SetBagId sets field value
func (o *Aansluiting) SetBagId(v string) {
	o.BagId = v
}

// GetBagNietBeschikbaar returns the BagNietBeschikbaar field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Aansluiting) GetBagNietBeschikbaar() bool {
	if o == nil || o.BagNietBeschikbaar.Get() == nil {
		var ret bool
		return ret
	}
	return *o.BagNietBeschikbaar.Get()
}

// GetBagNietBeschikbaarOk returns a tuple with the BagNietBeschikbaar field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Aansluiting) GetBagNietBeschikbaarOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.BagNietBeschikbaar.Get(), o.BagNietBeschikbaar.IsSet()
}

// HasBagNietBeschikbaar returns a boolean if a field has been set.
func (o *Aansluiting) HasBagNietBeschikbaar() bool {
	if o != nil && o.BagNietBeschikbaar.IsSet() {
		return true
	}

	return false
}

// SetBagNietBeschikbaar gets a reference to the given NullableBool and assigns it to the BagNietBeschikbaar field.
func (o *Aansluiting) SetBagNietBeschikbaar(v bool) {
	o.BagNietBeschikbaar.Set(&v)
}
// SetBagNietBeschikbaarNil sets the value for BagNietBeschikbaar to be an explicit nil
func (o *Aansluiting) SetBagNietBeschikbaarNil() {
	o.BagNietBeschikbaar.Set(nil)
}

// UnsetBagNietBeschikbaar ensures that no value is present for BagNietBeschikbaar, not even an explicit nil
func (o *Aansluiting) UnsetBagNietBeschikbaar() {
	o.BagNietBeschikbaar.Unset()
}

// GetBagComment returns the BagComment field value if set, zero value otherwise.
func (o *Aansluiting) GetBagComment() string {
	if o == nil || o.BagComment == nil {
		var ret string
		return ret
	}
	return *o.BagComment
}

// GetBagCommentOk returns a tuple with the BagComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Aansluiting) GetBagCommentOk() (*string, bool) {
	if o == nil || o.BagComment == nil {
		return nil, false
	}
	return o.BagComment, true
}

// HasBagComment returns a boolean if a field has been set.
func (o *Aansluiting) HasBagComment() bool {
	if o != nil && o.BagComment != nil {
		return true
	}

	return false
}

// SetBagComment gets a reference to the given string and assigns it to the BagComment field.
func (o *Aansluiting) SetBagComment(v string) {
	o.BagComment = &v
}

// GetRijksdriehoekstelX returns the RijksdriehoekstelX field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Aansluiting) GetRijksdriehoekstelX() float64 {
	if o == nil || o.RijksdriehoekstelX.Get() == nil {
		var ret float64
		return ret
	}
	return *o.RijksdriehoekstelX.Get()
}

// GetRijksdriehoekstelXOk returns a tuple with the RijksdriehoekstelX field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Aansluiting) GetRijksdriehoekstelXOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RijksdriehoekstelX.Get(), o.RijksdriehoekstelX.IsSet()
}

// HasRijksdriehoekstelX returns a boolean if a field has been set.
func (o *Aansluiting) HasRijksdriehoekstelX() bool {
	if o != nil && o.RijksdriehoekstelX.IsSet() {
		return true
	}

	return false
}

// SetRijksdriehoekstelX gets a reference to the given NullableFloat64 and assigns it to the RijksdriehoekstelX field.
func (o *Aansluiting) SetRijksdriehoekstelX(v float64) {
	o.RijksdriehoekstelX.Set(&v)
}
// SetRijksdriehoekstelXNil sets the value for RijksdriehoekstelX to be an explicit nil
func (o *Aansluiting) SetRijksdriehoekstelXNil() {
	o.RijksdriehoekstelX.Set(nil)
}

// UnsetRijksdriehoekstelX ensures that no value is present for RijksdriehoekstelX, not even an explicit nil
func (o *Aansluiting) UnsetRijksdriehoekstelX() {
	o.RijksdriehoekstelX.Unset()
}

// GetRijksdriehoekstelY returns the RijksdriehoekstelY field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Aansluiting) GetRijksdriehoekstelY() float64 {
	if o == nil || o.RijksdriehoekstelY.Get() == nil {
		var ret float64
		return ret
	}
	return *o.RijksdriehoekstelY.Get()
}

// GetRijksdriehoekstelYOk returns a tuple with the RijksdriehoekstelY field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Aansluiting) GetRijksdriehoekstelYOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RijksdriehoekstelY.Get(), o.RijksdriehoekstelY.IsSet()
}

// HasRijksdriehoekstelY returns a boolean if a field has been set.
func (o *Aansluiting) HasRijksdriehoekstelY() bool {
	if o != nil && o.RijksdriehoekstelY.IsSet() {
		return true
	}

	return false
}

// SetRijksdriehoekstelY gets a reference to the given NullableFloat64 and assigns it to the RijksdriehoekstelY field.
func (o *Aansluiting) SetRijksdriehoekstelY(v float64) {
	o.RijksdriehoekstelY.Set(&v)
}
// SetRijksdriehoekstelYNil sets the value for RijksdriehoekstelY to be an explicit nil
func (o *Aansluiting) SetRijksdriehoekstelYNil() {
	o.RijksdriehoekstelY.Set(nil)
}

// UnsetRijksdriehoekstelY ensures that no value is present for RijksdriehoekstelY, not even an explicit nil
func (o *Aansluiting) UnsetRijksdriehoekstelY() {
	o.RijksdriehoekstelY.Unset()
}

// GetGebruiksfunctie returns the Gebruiksfunctie field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Aansluiting) GetGebruiksfunctie() GebruiksfunctieEnum {
	if o == nil || o.Gebruiksfunctie.Get() == nil {
		var ret GebruiksfunctieEnum
		return ret
	}
	return *o.Gebruiksfunctie.Get()
}

// GetGebruiksfunctieOk returns a tuple with the Gebruiksfunctie field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Aansluiting) GetGebruiksfunctieOk() (*GebruiksfunctieEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.Gebruiksfunctie.Get(), o.Gebruiksfunctie.IsSet()
}

// HasGebruiksfunctie returns a boolean if a field has been set.
func (o *Aansluiting) HasGebruiksfunctie() bool {
	if o != nil && o.Gebruiksfunctie.IsSet() {
		return true
	}

	return false
}

// SetGebruiksfunctie gets a reference to the given NullableGebruiksfunctieEnum and assigns it to the Gebruiksfunctie field.
func (o *Aansluiting) SetGebruiksfunctie(v GebruiksfunctieEnum) {
	o.Gebruiksfunctie.Set(&v)
}
// SetGebruiksfunctieNil sets the value for Gebruiksfunctie to be an explicit nil
func (o *Aansluiting) SetGebruiksfunctieNil() {
	o.Gebruiksfunctie.Set(nil)
}

// UnsetGebruiksfunctie ensures that no value is present for Gebruiksfunctie, not even an explicit nil
func (o *Aansluiting) UnsetGebruiksfunctie() {
	o.Gebruiksfunctie.Unset()
}

// GetBijzonderheden returns the Bijzonderheden field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Aansluiting) GetBijzonderheden() string {
	if o == nil || o.Bijzonderheden.Get() == nil {
		var ret string
		return ret
	}
	return *o.Bijzonderheden.Get()
}

// GetBijzonderhedenOk returns a tuple with the Bijzonderheden field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Aansluiting) GetBijzonderhedenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bijzonderheden.Get(), o.Bijzonderheden.IsSet()
}

// HasBijzonderheden returns a boolean if a field has been set.
func (o *Aansluiting) HasBijzonderheden() bool {
	if o != nil && o.Bijzonderheden.IsSet() {
		return true
	}

	return false
}

// SetBijzonderheden gets a reference to the given NullableString and assigns it to the Bijzonderheden field.
func (o *Aansluiting) SetBijzonderheden(v string) {
	o.Bijzonderheden.Set(&v)
}
// SetBijzonderhedenNil sets the value for Bijzonderheden to be an explicit nil
func (o *Aansluiting) SetBijzonderhedenNil() {
	o.Bijzonderheden.Set(nil)
}

// UnsetBijzonderheden ensures that no value is present for Bijzonderheden, not even an explicit nil
func (o *Aansluiting) UnsetBijzonderheden() {
	o.Bijzonderheden.Unset()
}

// GetBron returns the Bron field value
// If the value is explicit nil, the zero value for BronEnum will be returned
func (o *Aansluiting) GetBron() BronEnum {
	if o == nil || o.Bron.Get() == nil {
		var ret BronEnum
		return ret
	}

	return *o.Bron.Get()
}

// GetBronOk returns a tuple with the Bron field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Aansluiting) GetBronOk() (*BronEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bron.Get(), o.Bron.IsSet()
}

// SetBron sets field value
func (o *Aansluiting) SetBron(v BronEnum) {
	o.Bron.Set(&v)
}

func (o Aansluiting) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["naam"] = o.Naam
	}
	if true {
		toSerialize["aansluitnummer"] = o.Aansluitnummer
	}
	if true {
		toSerialize["status"] = o.Status.Get()
	}
	if true {
		toSerialize["atsp"] = o.Atsp
	}
	if o.Gemeente.IsSet() {
		toSerialize["gemeente"] = o.Gemeente.Get()
	}
	if o.Straat != nil {
		toSerialize["straat"] = o.Straat
	}
	if o.Huisnummer != nil {
		toSerialize["huisnummer"] = o.Huisnummer
	}
	if o.Huisletter != nil {
		toSerialize["huisletter"] = o.Huisletter
	}
	if o.Toevoeging != nil {
		toSerialize["toevoeging"] = o.Toevoeging
	}
	if o.Postcode != nil {
		toSerialize["postcode"] = o.Postcode
	}
	if o.Plaats != nil {
		toSerialize["plaats"] = o.Plaats
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["modified"] = o.Modified
	}
	if true {
		toSerialize["toestand"] = o.Toestand.Get()
	}
	if o.BagLookupId != nil {
		toSerialize["bag_lookup_id"] = o.BagLookupId
	}
	if true {
		toSerialize["bag_id"] = o.BagId
	}
	if o.BagNietBeschikbaar.IsSet() {
		toSerialize["bag_niet_beschikbaar"] = o.BagNietBeschikbaar.Get()
	}
	if o.BagComment != nil {
		toSerialize["bag_comment"] = o.BagComment
	}
	if o.RijksdriehoekstelX.IsSet() {
		toSerialize["rijksdriehoekstel_x"] = o.RijksdriehoekstelX.Get()
	}
	if o.RijksdriehoekstelY.IsSet() {
		toSerialize["rijksdriehoekstel_y"] = o.RijksdriehoekstelY.Get()
	}
	if o.Gebruiksfunctie.IsSet() {
		toSerialize["gebruiksfunctie"] = o.Gebruiksfunctie.Get()
	}
	if o.Bijzonderheden.IsSet() {
		toSerialize["bijzonderheden"] = o.Bijzonderheden.Get()
	}
	if true {
		toSerialize["bron"] = o.Bron.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAansluiting struct {
	value *Aansluiting
	isSet bool
}

func (v NullableAansluiting) Get() *Aansluiting {
	return v.value
}

func (v *NullableAansluiting) Set(val *Aansluiting) {
	v.value = val
	v.isSet = true
}

func (v NullableAansluiting) IsSet() bool {
	return v.isSet
}

func (v *NullableAansluiting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAansluiting(val *Aansluiting) *NullableAansluiting {
	return &NullableAansluiting{value: val, isSet: true}
}

func (v NullableAansluiting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAansluiting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


